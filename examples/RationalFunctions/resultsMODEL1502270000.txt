Read the model in 9.011640548706055s
Original system:
Km' = (0)/(1)
Kp' = (0)/(1)
Kq' = (0)/(1)
Kt' = (0)/(1)
M' = (0)/(1)
a' = (a*em**2*ns*si**2*vm + Kp*em**2*gmax*ns*si**2*vm + -Km*a**3*gmax*rmm*rmp*rmq*rmr*rmt**2 + -Km*a**3*gmax*rmm*rmp*rmq*rmr**2*rmt + -Km*a**3*gmax*rmm*rmp*rmq**2*rmr*rmt + -Km*a**3*gmax*rmm*rmp**2*rmq*rmr*rmt + -Km*a**3*gmax*rmm**2*rmp*rmq*rmr*rmt + -a**3*gmax*rmm*rmp*rmq*rmr*rmt**2*si + -a**3*gmax*rmm*rmp*rmq*rmr**2*rmt*si + -a**3*gmax*rmm*rmp*rmq**2*rmr*rmt*si + -a**3*gmax*rmm*rmp**2*rmq*rmr*rmt*si + -a**3*gmax*rmm**2*rmp*rmq*rmr*rmt*si + -Km*M*a**4*gmax*rmm*rmp*rmq*rmr*rmt**2 + -Km*M*a**4*gmax*rmm*rmp*rmq*rmr**2*rmt + -Km*M*a**4*gmax*rmm*rmp*rmq**2*rmr*rmt + -Km*M*a**4*gmax*rmm*rmp**2*rmq*rmr*rmt + -Km*M*a**4*gmax*rmm**2*rmp*rmq*rmr*rmt + -M*a**4*gmax*rmm*rmp*rmq*rmr*rmt**2*si + -M*a**4*gmax*rmm*rmp*rmq*rmr**2*rmt*si + -M*a**4*gmax*rmm*rmp*rmq**2*rmr*rmt*si + -M*a**4*gmax*rmm*rmp**2*rmq*rmr*rmt*si + -M*a**4*gmax*rmm**2*rmp*rmq*rmr*rmt*si)/(Km*a + a*si + Km*Kp*gmax + Kp*gmax*si)
b' = (0)/(1)
cl' = (0)/(1)
dm' = (0)/(1)
em' = (-M*a**2*em**3*gmax*rmm*rmp*rmq*rmr*rmt**2 + -M*a**2*em**3*gmax*rmm*rmp*rmq*rmr**2*rmt + -M*a**2*em**3*gmax*rmm*rmp*rmq**2*rmr*rmt + -M*a**2*em**3*gmax*rmm*rmp**2*rmq*rmr*rmt + -M*a**2*em**3*gmax*rmm**2*rmp*rmq*rmr*rmt + a**2*gmax*nx*rmm**3)/(a + Kp*gmax)
et' = (-M*a**2*et**3*gmax*rmm*rmp*rmq*rmr*rmt**2 + -M*a**2*et**3*gmax*rmm*rmp*rmq*rmr**2*rmt + -M*a**2*et**3*gmax*rmm*rmp*rmq**2*rmr*rmt + -M*a**2*et**3*gmax*rmm*rmp**2*rmq*rmr*rmt + -M*a**2*et**3*gmax*rmm**2*rmp*rmq*rmr*rmt + a**2*gmax*nx*rmt**3)/(a + Kp*gmax)
gmax' = (0)/(1)
k_cm' = (0)/(1)
kb' = (0)/(1)
ku' = (0)/(1)
mm' = (a**4*we + a**2*ku*rmm**3 + -a**2*dm*mm**3 + Kp*a**3*gmax*we + a*ku*rmm**3*thetax + a**3*gmax*nx*rmm**3 + -a*dm*mm**3*thetax + -a**2*kb*mm**3*r**3 + Kp*a*gmax*ku*rmm**3 + Kp*gmax*ku*rmm**3*thetax + a**2*gmax*nx*rmm**3*thetax + -Kp*a*dm*gmax*mm**3 + -Kp*dm*gmax*mm**3*thetax + -a*kb*mm**3*r**3*thetax + -Kp*a*gmax*kb*mm**3*r**3 + -Kp*gmax*kb*mm**3*r**3*thetax + -M*a**3*gmax*mm**3*rmm*rmp*rmq*rmr*rmt**2 + -M*a**3*gmax*mm**3*rmm*rmp*rmq*rmr**2*rmt + -M*a**3*gmax*mm**3*rmm*rmp*rmq**2*rmr*rmt + -M*a**3*gmax*mm**3*rmm*rmp**2*rmq*rmr*rmt + -M*a**3*gmax*mm**3*rmm**2*rmp*rmq*rmr*rmt + -M*a**2*gmax*mm**3*rmm*rmp*rmq*rmr*rmt**2*thetax + -M*a**2*gmax*mm**3*rmm*rmp*rmq*rmr**2*rmt*thetax + -M*a**2*gmax*mm**3*rmm*rmp*rmq**2*rmr*rmt*thetax + -M*a**2*gmax*mm**3*rmm*rmp**2*rmq*rmr*rmt*thetax + -M*a**2*gmax*mm**3*rmm**2*rmp*rmq*rmr*rmt*thetax)/(a**2 + a*thetax + Kp*a*gmax + Kp*gmax*thetax)
mp' = (a**4*wp + a**2*ku*rmp**3 + -a**2*dm*mp**3 + Kp*a**3*gmax*wp + a*ku*rmp**3*thetax + a**3*gmax*nx*rmp**3 + -a*dm*mp**3*thetax + -a**2*kb*mp**3*r**3 + Kp*a*gmax*ku*rmp**3 + Kp*gmax*ku*rmp**3*thetax + a**2*gmax*nx*rmp**3*thetax + -Kp*a*dm*gmax*mp**3 + -Kp*dm*gmax*mp**3*thetax + -a*kb*mp**3*r**3*thetax + -Kp*a*gmax*kb*mp**3*r**3 + -Kp*gmax*kb*mp**3*r**3*thetax + -M*a**3*gmax*mp**3*rmm*rmp*rmq*rmr*rmt**2 + -M*a**3*gmax*mp**3*rmm*rmp*rmq*rmr**2*rmt + -M*a**3*gmax*mp**3*rmm*rmp*rmq**2*rmr*rmt + -M*a**3*gmax*mp**3*rmm*rmp**2*rmq*rmr*rmt + -M*a**3*gmax*mp**3*rmm**2*rmp*rmq*rmr*rmt + -M*a**2*gmax*mp**3*rmm*rmp*rmq*rmr*rmt**2*thetax + -M*a**2*gmax*mp**3*rmm*rmp*rmq*rmr**2*rmt*thetax + -M*a**2*gmax*mp**3*rmm*rmp*rmq**2*rmr*rmt*thetax + -M*a**2*gmax*mp**3*rmm*rmp**2*rmq*rmr*rmt*thetax + -M*a**2*gmax*mp**3*rmm**2*rmp*rmq*rmr*rmt*thetax)/(a**2 + a*thetax + Kp*a*gmax + Kp*gmax*thetax)
mq' = (a**2*ku*rmq**3 + a**4*q**2*wq + -a**2*dm*mq**3 + a*ku*rmq**3*thetax + a**3*gmax*nx*rmq**3 + -a*dm*mq**3*thetax + -a**2*kb*mq**3*r**3 + Kp*a*gmax*ku*rmq**3 + Kp*gmax*ku*rmq**3*thetax + Kp*a**3*gmax*q**2*wq + a**2*gmax*nx*rmq**3*thetax + Kq**4*a**2*ku*q**4*rmq**3 + -Kp*a*dm*gmax*mq**3 + -Kp*dm*gmax*mq**3*thetax + -a*kb*mq**3*r**3*thetax + -Kq**4*a**2*dm*mq**3*q**4 + Kq**4*a*ku*q**4*rmq**3*thetax + Kq**4*a**3*gmax*nx*q**4*rmq**3 + -Kp*a*gmax*kb*mq**3*r**3 + -Kp*gmax*kb*mq**3*r**3*thetax + -Kq**4*a*dm*mq**3*q**4*thetax + -Kq**4*a**2*kb*mq**3*q**4*r**3 + Kp*Kq**4*a*gmax*ku*q**4*rmq**3 + Kp*Kq**4*gmax*ku*q**4*rmq**3*thetax + Kq**4*a**2*gmax*nx*q**4*rmq**3*thetax + -Kp*Kq**4*a*dm*gmax*mq**3*q**4 + -Kp*Kq**4*dm*gmax*mq**3*q**4*thetax + -Kq**4*a*kb*mq**3*q**4*r**3*thetax + -Kp*Kq**4*a*gmax*kb*mq**3*q**4*r**3 + -Kp*Kq**4*gmax*kb*mq**3*q**4*r**3*thetax + -M*a**3*gmax*mq**3*rmm*rmp*rmq*rmr*rmt**2 + -M*a**3*gmax*mq**3*rmm*rmp*rmq*rmr**2*rmt + -M*a**3*gmax*mq**3*rmm*rmp*rmq**2*rmr*rmt + -M*a**3*gmax*mq**3*rmm*rmp**2*rmq*rmr*rmt + -M*a**3*gmax*mq**3*rmm**2*rmp*rmq*rmr*rmt + -M*a**2*gmax*mq**3*rmm*rmp*rmq*rmr*rmt**2*thetax + -M*a**2*gmax*mq**3*rmm*rmp*rmq*rmr**2*rmt*thetax + -M*a**2*gmax*mq**3*rmm*rmp*rmq**2*rmr*rmt*thetax + -M*a**2*gmax*mq**3*rmm*rmp**2*rmq*rmr*rmt*thetax + -M*a**2*gmax*mq**3*rmm**2*rmp*rmq*rmr*rmt*thetax + -Kq**4*M*a**3*gmax*mq**3*q**4*rmm*rmp*rmq*rmr*rmt**2 + -Kq**4*M*a**3*gmax*mq**3*q**4*rmm*rmp*rmq*rmr**2*rmt + -Kq**4*M*a**3*gmax*mq**3*q**4*rmm*rmp*rmq**2*rmr*rmt + -Kq**4*M*a**3*gmax*mq**3*q**4*rmm*rmp**2*rmq*rmr*rmt + -Kq**4*M*a**3*gmax*mq**3*q**4*rmm**2*rmp*rmq*rmr*rmt + -Kq**4*M*a**2*gmax*mq**3*q**4*rmm*rmp*rmq*rmr*rmt**2*thetax + -Kq**4*M*a**2*gmax*mq**3*q**4*rmm*rmp*rmq*rmr**2*rmt*thetax + -Kq**4*M*a**2*gmax*mq**3*q**4*rmm*rmp*rmq**2*rmr*rmt*thetax + -Kq**4*M*a**2*gmax*mq**3*q**4*rmm*rmp**2*rmq*rmr*rmt*thetax + -Kq**4*M*a**2*gmax*mq**3*q**4*rmm**2*rmp*rmq*rmr*rmt*thetax)/(a**2 + a*thetax + Kp*a*gmax + Kp*gmax*thetax + Kq**4*a**2*q**4 + Kq**4*a*q**4*thetax + Kp*Kq**4*a*gmax*q**4 + Kp*Kq**4*gmax*q**4*thetax)
mr' = (a**4*wr + Kp*a**3*gmax*wr + a**3*gmax*nr*rmr**3 + a**2*gmax*nr*rmr**3*thetar + -M*a**3*gmax*mr**3*rmm*rmp*rmq*rmr*rmt**2 + -M*a**3*gmax*mr**3*rmm*rmp*rmq*rmr**2*rmt + -M*a**3*gmax*mr**3*rmm*rmp*rmq**2*rmr*rmt + -M*a**3*gmax*mr**3*rmm*rmp**2*rmq*rmr*rmt + -M*a**3*gmax*mr**3*rmm**2*rmp*rmq*rmr*rmt + -M*a**2*gmax*mr**3*rmm*rmp*rmq*rmr*rmt**2*thetar + -M*a**2*gmax*mr**3*rmm*rmp*rmq*rmr**2*rmt*thetar + -M*a**2*gmax*mr**3*rmm*rmp*rmq**2*rmr*rmt*thetar + -M*a**2*gmax*mr**3*rmm*rmp**2*rmq*rmr*rmt*thetar + -M*a**2*gmax*mr**3*rmm**2*rmp*rmq*rmr*rmt*thetar + -a**2*dm*mr**3 + -a*dm*mr**3*thetar + -Kp*a*dm*gmax*mr**3 + -Kp*dm*gmax*mr**3*thetar + -a**2*kb*mr**3*r**3 + -a*kb*mr**3*r**3*thetar + -Kp*a*gmax*kb*mr**3*r**3 + -Kp*gmax*kb*mr**3*r**3*thetar + a**2*ku*rmr**3 + a*ku*rmr**3*thetar + Kp*a*gmax*ku*rmr**3 + Kp*gmax*ku*rmr**3*thetar)/(a**2 + a*thetar + Kp*a*gmax + Kp*gmax*thetar)
mt' = (a**4*we + a**2*ku*rmt**3 + -a**2*dm*mt**3 + Kp*a**3*gmax*we + a*ku*rmt**3*thetax + a**3*gmax*nx*rmt**3 + -a*dm*mt**3*thetax + -a**2*kb*mt**3*r**3 + Kp*a*gmax*ku*rmt**3 + Kp*gmax*ku*rmt**3*thetax + a**2*gmax*nx*rmt**3*thetax + -Kp*a*dm*gmax*mt**3 + -Kp*dm*gmax*mt**3*thetax + -a*kb*mt**3*r**3*thetax + -Kp*a*gmax*kb*mt**3*r**3 + -Kp*gmax*kb*mt**3*r**3*thetax + -M*a**3*gmax*mt**3*rmm*rmp*rmq*rmr*rmt**2 + -M*a**3*gmax*mt**3*rmm*rmp*rmq*rmr**2*rmt + -M*a**3*gmax*mt**3*rmm*rmp*rmq**2*rmr*rmt + -M*a**3*gmax*mt**3*rmm*rmp**2*rmq*rmr*rmt + -M*a**3*gmax*mt**3*rmm**2*rmp*rmq*rmr*rmt + -M*a**2*gmax*mt**3*rmm*rmp*rmq*rmr*rmt**2*thetax + -M*a**2*gmax*mt**3*rmm*rmp*rmq*rmr**2*rmt*thetax + -M*a**2*gmax*mt**3*rmm*rmp*rmq**2*rmr*rmt*thetax + -M*a**2*gmax*mt**3*rmm*rmp**2*rmq*rmr*rmt*thetax + -M*a**2*gmax*mt**3*rmm**2*rmp*rmq*rmr*rmt*thetax)/(a**2 + a*thetax + Kp*a*gmax + Kp*gmax*thetax)
nr' = (0)/(1)
ns' = (0)/(1)
nx' = (0)/(1)
p' = (-M*a**2*gmax*p**3*rmm*rmp*rmq**2*rmr*rmt + -M*a**2*gmax*p**3*rmm*rmp*rmq*rmr**2*rmt + -M*a**2*gmax*p**3*rmm*rmp**2*rmq*rmr*rmt + -M*a**2*gmax*p**3*rmm*rmp*rmq*rmr*rmt**2 + -M*a**2*gmax*p**3*rmm**2*rmp*rmq*rmr*rmt + a**2*gmax*nx*rmp**3)/(Kp*gmax + a)
q' = (-M*a**2*gmax*q**3*rmm*rmp*rmq*rmr*rmt**2 + -M*a**2*gmax*q**3*rmm*rmp*rmq*rmr**2*rmt + -M*a**2*gmax*q**3*rmm*rmp*rmq**2*rmr*rmt + -M*a**2*gmax*q**3*rmm*rmp**2*rmq*rmr*rmt + -M*a**2*gmax*q**3*rmm**2*rmp*rmq*rmr*rmt + a**2*gmax*nx*rmq**3)/(a + Kp*gmax)
r' = (-Kp*gmax*kb*mt**3*r**3 + -a*kb*mt**3*r**3 + Kp*gmax*ku*rmt**3 + a*ku*rmt**3 + -Kp*gmax*kb*mm**3*r**3 + -a*kb*mm**3*r**3 + Kp*gmax*ku*rmm**3 + a*ku*rmm**3 + Kp*gmax*ku*rmp**3 + a*ku*rmp**3 + -Kp*gmax*kb*mp**3*r**3 + -a*kb*mp**3*r**3 + Kp*gmax*ku*rmq**3 + a*ku*rmq**3 + -Kp*gmax*kb*mq**3*r**3 + -a*kb*mq**3*r**3 + -M*a**2*gmax*r**3*rmm*rmp*rmq**2*rmr*rmt + -M*a**2*gmax*r**3*rmm*rmp*rmq*rmr**2*rmt + -M*a**2*gmax*r**3*rmm*rmp**2*rmq*rmr*rmt + -M*a**2*gmax*r**3*rmm*rmp*rmq*rmr*rmt**2 + -M*a**2*gmax*r**3*rmm**2*rmp*rmq*rmr*rmt + a**2*gmax*nx*rmt**3 + 2*a**2*gmax*nr*rmr**3 + a**2*gmax*nx*rmp**3 + a**2*gmax*nx*rmm**3 + a**2*gmax*nx*rmq**3 + -Kp*gmax*kb*mr**3*r**3 + -a*kb*mr**3*r**3 + Kp*gmax*ku*rmr**3 + a*ku*rmr**3)/(Kp*gmax + a)
rmm' = (Kp*b*gmax*zmm**3 + a*b*zmm**3 + Kp*gmax*kb*mm**3*r**3 + a*kb*mm**3*r**3 + -Kp*cl*gmax*k_cm*rmm**3 + -a*cl*k_cm*rmm**3 + -Kp*gmax*ku*rmm**3 + -a*ku*rmm**3 + -a**2*gmax*nx*rmm**3 + -M*a**2*gmax*rmm**3*rmp*rmq**2*rmr*rmt + -M*a**2*gmax*rmm**3*rmp*rmq*rmr**2*rmt + -M*a**2*gmax*rmm**3*rmp**2*rmq*rmr*rmt + -M*a**2*gmax*rmm**3*rmp*rmq*rmr*rmt**2 + -M*a**2*gmax*rmm**4*rmp*rmq*rmr*rmt)/(Kp*gmax + a)
rmp' = (Kp*b*gmax*zmp**3 + a*b*zmp**3 + -Kp*gmax*ku*rmp**3 + -a*ku*rmp**3 + -Kp*cl*gmax*k_cm*rmp**3 + -a*cl*k_cm*rmp**3 + Kp*gmax*kb*mp**3*r**3 + a*kb*mp**3*r**3 + -a**2*gmax*nx*rmp**3 + -M*a**2*gmax*rmm*rmp**3*rmq**2*rmr*rmt + -M*a**2*gmax*rmm*rmp**3*rmq*rmr**2*rmt + -M*a**2*gmax*rmm*rmp**4*rmq*rmr*rmt + -M*a**2*gmax*rmm*rmp**3*rmq*rmr*rmt**2 + -M*a**2*gmax*rmm**2*rmp**3*rmq*rmr*rmt)/(Kp*gmax + a)
rmq' = (Kp*b*gmax*zmq**3 + a*b*zmq**3 + -Kp*gmax*ku*rmq**3 + -a*ku*rmq**3 + -Kp*cl*gmax*k_cm*rmq**3 + -a*cl*k_cm*rmq**3 + Kp*gmax*kb*mq**3*r**3 + a*kb*mq**3*r**3 + -M*a**2*gmax*rmm*rmp*rmq**4*rmr*rmt + -M*a**2*gmax*rmm*rmp*rmq**3*rmr**2*rmt + -M*a**2*gmax*rmm*rmp**2*rmq**3*rmr*rmt + -M*a**2*gmax*rmm*rmp*rmq**3*rmr*rmt**2 + -M*a**2*gmax*rmm**2*rmp*rmq**3*rmr*rmt + -a**2*gmax*nx*rmq**3)/(Kp*gmax + a)
rmr' = (-a**2*gmax*nr*rmr**3 + -M*a**2*gmax*rmm*rmp*rmq**2*rmr**3*rmt + -M*a**2*gmax*rmm*rmp*rmq*rmr**4*rmt + -M*a**2*gmax*rmm*rmp**2*rmq*rmr**3*rmt + -M*a**2*gmax*rmm*rmp*rmq*rmr**3*rmt**2 + -M*a**2*gmax*rmm**2*rmp*rmq*rmr**3*rmt + Kp*b*gmax*zmr**3 + a*b*zmr**3 + Kp*gmax*kb*mr**3*r**3 + a*kb*mr**3*r**3 + -Kp*gmax*ku*rmr**3 + -a*ku*rmr**3 + -Kp*cl*gmax*k_cm*rmr**3 + -a*cl*k_cm*rmr**3)/(Kp*gmax + a)
rmt' = (Kp*b*gmax*zmt**3 + a*b*zmt**3 + Kp*gmax*kb*mt**3*r**3 + a*kb*mt**3*r**3 + -Kp*cl*gmax*k_cm*rmt**3 + -a*cl*k_cm*rmt**3 + -Kp*gmax*ku*rmt**3 + -a*ku*rmt**3 + -a**2*gmax*nx*rmt**3 + -M*a**2*gmax*rmm*rmp*rmq**2*rmr*rmt**3 + -M*a**2*gmax*rmm*rmp*rmq*rmr**2*rmt**3 + -M*a**2*gmax*rmm*rmp**2*rmq*rmr*rmt**3 + -M*a**2*gmax*rmm*rmp*rmq*rmr*rmt**4 + -M*a**2*gmax*rmm**2*rmp*rmq*rmr*rmt**3)/(Kp*gmax + a)
s0' = (0)/(1)
si' = (Km*a*et**3*s0*vt + a*et**3*s0*si*vt + -Kt*a*em**2*si**3*vm + -a*em**2*s0*si**3*vm + Km*Kp*et**3*gmax*s0*vt + Kp*et**3*gmax*s0*si*vt + -Kp*Kt*em**2*gmax*si**3*vm + -Kp*em**2*gmax*s0*si**3*vm + -Kt*M*a**2*gmax*rmm*rmp*rmq*rmr*rmt**2*si**4 + -Kt*M*a**2*gmax*rmm*rmp*rmq*rmr**2*rmt*si**4 + -Kt*M*a**2*gmax*rmm*rmp*rmq**2*rmr*rmt*si**4 + -Kt*M*a**2*gmax*rmm*rmp**2*rmq*rmr*rmt*si**4 + -Kt*M*a**2*gmax*rmm**2*rmp*rmq*rmr*rmt*si**4 + -M*a**2*gmax*rmm*rmp*rmq*rmr*rmt**2*s0*si**4 + -M*a**2*gmax*rmm*rmp*rmq*rmr**2*rmt*s0*si**4 + -M*a**2*gmax*rmm*rmp*rmq**2*rmr*rmt*s0*si**4 + -M*a**2*gmax*rmm*rmp**2*rmq*rmr*rmt*s0*si**4 + -M*a**2*gmax*rmm**2*rmp*rmq*rmr*rmt*s0*si**4 + -Km*Kt*M*a**2*gmax*rmm*rmp*rmq*rmr*rmt**2*si**3 + -Km*Kt*M*a**2*gmax*rmm*rmp*rmq*rmr**2*rmt*si**3 + -Km*Kt*M*a**2*gmax*rmm*rmp*rmq**2*rmr*rmt*si**3 + -Km*Kt*M*a**2*gmax*rmm*rmp**2*rmq*rmr*rmt*si**3 + -Km*Kt*M*a**2*gmax*rmm**2*rmp*rmq*rmr*rmt*si**3 + -Km*M*a**2*gmax*rmm*rmp*rmq*rmr*rmt**2*s0*si**3 + -Km*M*a**2*gmax*rmm*rmp*rmq*rmr**2*rmt*s0*si**3 + -Km*M*a**2*gmax*rmm*rmp*rmq**2*rmr*rmt*s0*si**3 + -Km*M*a**2*gmax*rmm*rmp**2*rmq*rmr*rmt*s0*si**3 + -Km*M*a**2*gmax*rmm**2*rmp*rmq*rmr*rmt*s0*si**3)/(Km*Kt*a + Km*a*s0 + Kt*a*si + a*s0*si + Km*Kp*Kt*gmax + Km*Kp*gmax*s0 + Kp*Kt*gmax*si + Kp*gmax*s0*si)
thetar' = (0)/(1)
thetax' = (0)/(1)
vm' = (0)/(1)
vt' = (0)/(1)
we' = (0)/(1)
wp' = (0)/(1)
wq' = (0)/(1)
wr' = (0)/(1)
zmm' = (-M*a**2*gmax*rmm*rmp*rmq**2*rmr*rmt*zmm**3 + -M*a**2*gmax*rmm*rmp*rmq*rmr**2*rmt*zmm**3 + -M*a**2*gmax*rmm*rmp**2*rmq*rmr*rmt*zmm**3 + -M*a**2*gmax*rmm*rmp*rmq*rmr*rmt**2*zmm**3 + -M*a**2*gmax*rmm**2*rmp*rmq*rmr*rmt*zmm**3 + -Kp*b*gmax*zmm**3 + -a*b*zmm**3 + Kp*cl*gmax*k_cm*rmm**3 + a*cl*k_cm*rmm**3)/(Kp*gmax + a)
zmp' = (-Kp*b*gmax*zmp**3 + -a*b*zmp**3 + -M*a**2*gmax*rmm*rmp*rmq**2*rmr*rmt*zmp**3 + -M*a**2*gmax*rmm*rmp*rmq*rmr**2*rmt*zmp**3 + -M*a**2*gmax*rmm*rmp**2*rmq*rmr*rmt*zmp**3 + -M*a**2*gmax*rmm*rmp*rmq*rmr*rmt**2*zmp**3 + -M*a**2*gmax*rmm**2*rmp*rmq*rmr*rmt*zmp**3 + Kp*cl*gmax*k_cm*rmp**3 + a*cl*k_cm*rmp**3)/(Kp*gmax + a)
zmq' = (-Kp*b*gmax*zmq**3 + -a*b*zmq**3 + Kp*cl*gmax*k_cm*rmq**3 + a*cl*k_cm*rmq**3 + -M*a**2*gmax*rmm*rmp*rmq**2*rmr*rmt*zmq**3 + -M*a**2*gmax*rmm*rmp*rmq*rmr**2*rmt*zmq**3 + -M*a**2*gmax*rmm*rmp**2*rmq*rmr*rmt*zmq**3 + -M*a**2*gmax*rmm*rmp*rmq*rmr*rmt**2*zmq**3 + -M*a**2*gmax*rmm**2*rmp*rmq*rmr*rmt*zmq**3)/(Kp*gmax + a)
zmr' = (-M*a**2*gmax*rmm*rmp*rmq**2*rmr*rmt*zmr**3 + -M*a**2*gmax*rmm*rmp*rmq*rmr**2*rmt*zmr**3 + -M*a**2*gmax*rmm*rmp**2*rmq*rmr*rmt*zmr**3 + -M*a**2*gmax*rmm*rmp*rmq*rmr*rmt**2*zmr**3 + -M*a**2*gmax*rmm**2*rmp*rmq*rmr*rmt*zmr**3 + -Kp*b*gmax*zmr**3 + -a*b*zmr**3 + Kp*cl*gmax*k_cm*rmr**3 + a*cl*k_cm*rmr**3)/(Kp*gmax + a)
zmt' = (Kp*cl*gmax*k_cm*rmt**3 + a*cl*k_cm*rmt**3 + -Kp*b*gmax*zmt**3 + -a*b*zmt**3 + -M*a**2*gmax*rmm*rmp*rmq**2*rmr*rmt*zmt**3 + -M*a**2*gmax*rmm*rmp*rmq*rmr**2*rmt*zmt**3 + -M*a**2*gmax*rmm*rmp**2*rmq*rmr*rmt*zmt**3 + -M*a**2*gmax*rmm*rmp*rmq*rmr*rmt**2*zmt**3 + -M*a**2*gmax*rmm**2*rmp*rmq*rmr*rmt*zmt**3)/(Kp*gmax + a)
Outputs to fix:
[MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(1,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1), MPQ(0,1)]
New variables:
y0 = Km
y1 = Kp
y2 = Kq
y3 = Kt
y4 = M
y5 = a
y6 = b
y7 = cl
y8 = dm
y9 = em
y10 = et
y11 = gmax
y12 = k_cm
y13 = kb
y14 = ku
y15 = mm
y16 = mp
y17 = mq
y18 = mr
y19 = mt
y20 = nr
y21 = ns
y22 = nx
y23 = q
y24 = r
y25 = rmm
y26 = rmp
y27 = rmq
y28 = rmr
y29 = rmt
y30 = s0
y31 = si
y32 = thetar
y33 = thetax
y34 = vm
y35 = vt
y36 = we
y37 = wp
y38 = wq
y39 = wr
y40 = zmm
y41 = zmp
y42 = zmq
y43 = zmr
y44 = zmt
Lumped system:
y0' = (0)/(1)
y1' = (0)/(1)
y2' = (0)/(1)
y3' = (0)/(1)
y4' = (0)/(1)
y5' = (y5*y9**2*y21*y31**2*y34 + y1*y9**2*y11*y21*y31**2*y34 + -y0*y5**3*y11*y25*y26*y27*y28*y29**2 + -y0*y5**3*y11*y25*y26*y27*y28**2*y29 + -y0*y5**3*y11*y25*y26*y27**2*y28*y29 + -y0*y5**3*y11*y25*y26**2*y27*y28*y29 + -y0*y5**3*y11*y25**2*y26*y27*y28*y29 + -y5**3*y11*y25*y26*y27*y28*y29**2*y31 + -y5**3*y11*y25*y26*y27*y28**2*y29*y31 + -y5**3*y11*y25*y26*y27**2*y28*y29*y31 + -y5**3*y11*y25*y26**2*y27*y28*y29*y31 + -y5**3*y11*y25**2*y26*y27*y28*y29*y31 + -y0*y4*y5**4*y11*y25*y26*y27*y28*y29**2 + -y0*y4*y5**4*y11*y25*y26*y27*y28**2*y29 + -y0*y4*y5**4*y11*y25*y26*y27**2*y28*y29 + -y0*y4*y5**4*y11*y25*y26**2*y27*y28*y29 + -y0*y4*y5**4*y11*y25**2*y26*y27*y28*y29 + -y4*y5**4*y11*y25*y26*y27*y28*y29**2*y31 + -y4*y5**4*y11*y25*y26*y27*y28**2*y29*y31 + -y4*y5**4*y11*y25*y26*y27**2*y28*y29*y31 + -y4*y5**4*y11*y25*y26**2*y27*y28*y29*y31 + -y4*y5**4*y11*y25**2*y26*y27*y28*y29*y31)/(y0*y5 + y5*y31 + y0*y1*y11 + y1*y11*y31)
y6' = (0)/(1)
y7' = (0)/(1)
y8' = (0)/(1)
y9' = (-y4*y5**2*y9**3*y11*y25*y26*y27*y28*y29**2 + -y4*y5**2*y9**3*y11*y25*y26*y27*y28**2*y29 + -y4*y5**2*y9**3*y11*y25*y26*y27**2*y28*y29 + -y4*y5**2*y9**3*y11*y25*y26**2*y27*y28*y29 + -y4*y5**2*y9**3*y11*y25**2*y26*y27*y28*y29 + y5**2*y11*y22*y25**3)/(y5 + y1*y11)
y10' = (-y4*y5**2*y10**3*y11*y25*y26*y27*y28*y29**2 + -y4*y5**2*y10**3*y11*y25*y26*y27*y28**2*y29 + -y4*y5**2*y10**3*y11*y25*y26*y27**2*y28*y29 + -y4*y5**2*y10**3*y11*y25*y26**2*y27*y28*y29 + -y4*y5**2*y10**3*y11*y25**2*y26*y27*y28*y29 + y5**2*y11*y22*y29**3)/(y5 + y1*y11)
y11' = (0)/(1)
y12' = (0)/(1)
y13' = (0)/(1)
y14' = (0)/(1)
y15' = (y5**4*y36 + y5**2*y14*y25**3 + -y5**2*y8*y15**3 + y1*y5**3*y11*y36 + y5*y14*y25**3*y33 + y5**3*y11*y22*y25**3 + -y5*y8*y15**3*y33 + -y5**2*y13*y15**3*y24**3 + y1*y5*y11*y14*y25**3 + y1*y11*y14*y25**3*y33 + y5**2*y11*y22*y25**3*y33 + -y1*y5*y8*y11*y15**3 + -y1*y8*y11*y15**3*y33 + -y5*y13*y15**3*y24**3*y33 + -y1*y5*y11*y13*y15**3*y24**3 + -y1*y11*y13*y15**3*y24**3*y33 + -y4*y5**3*y11*y15**3*y25*y26*y27*y28*y29**2 + -y4*y5**3*y11*y15**3*y25*y26*y27*y28**2*y29 + -y4*y5**3*y11*y15**3*y25*y26*y27**2*y28*y29 + -y4*y5**3*y11*y15**3*y25*y26**2*y27*y28*y29 + -y4*y5**3*y11*y15**3*y25**2*y26*y27*y28*y29 + -y4*y5**2*y11*y15**3*y25*y26*y27*y28*y29**2*y33 + -y4*y5**2*y11*y15**3*y25*y26*y27*y28**2*y29*y33 + -y4*y5**2*y11*y15**3*y25*y26*y27**2*y28*y29*y33 + -y4*y5**2*y11*y15**3*y25*y26**2*y27*y28*y29*y33 + -y4*y5**2*y11*y15**3*y25**2*y26*y27*y28*y29*y33)/(y5**2 + y5*y33 + y1*y5*y11 + y1*y11*y33)
y16' = (y5**4*y37 + y5**2*y14*y26**3 + -y5**2*y8*y16**3 + y1*y5**3*y11*y37 + y5*y14*y26**3*y33 + y5**3*y11*y22*y26**3 + -y5*y8*y16**3*y33 + -y5**2*y13*y16**3*y24**3 + y1*y5*y11*y14*y26**3 + y1*y11*y14*y26**3*y33 + y5**2*y11*y22*y26**3*y33 + -y1*y5*y8*y11*y16**3 + -y1*y8*y11*y16**3*y33 + -y5*y13*y16**3*y24**3*y33 + -y1*y5*y11*y13*y16**3*y24**3 + -y1*y11*y13*y16**3*y24**3*y33 + -y4*y5**3*y11*y16**3*y25*y26*y27*y28*y29**2 + -y4*y5**3*y11*y16**3*y25*y26*y27*y28**2*y29 + -y4*y5**3*y11*y16**3*y25*y26*y27**2*y28*y29 + -y4*y5**3*y11*y16**3*y25*y26**2*y27*y28*y29 + -y4*y5**3*y11*y16**3*y25**2*y26*y27*y28*y29 + -y4*y5**2*y11*y16**3*y25*y26*y27*y28*y29**2*y33 + -y4*y5**2*y11*y16**3*y25*y26*y27*y28**2*y29*y33 + -y4*y5**2*y11*y16**3*y25*y26*y27**2*y28*y29*y33 + -y4*y5**2*y11*y16**3*y25*y26**2*y27*y28*y29*y33 + -y4*y5**2*y11*y16**3*y25**2*y26*y27*y28*y29*y33)/(y5**2 + y5*y33 + y1*y5*y11 + y1*y11*y33)
y17' = (y5**2*y14*y27**3 + y5**4*y23**2*y38 + -y5**2*y8*y17**3 + y5*y14*y27**3*y33 + y5**3*y11*y22*y27**3 + -y5*y8*y17**3*y33 + -y5**2*y13*y17**3*y24**3 + y1*y5*y11*y14*y27**3 + y1*y11*y14*y27**3*y33 + y1*y5**3*y11*y23**2*y38 + y5**2*y11*y22*y27**3*y33 + y2**4*y5**2*y14*y23**4*y27**3 + -y1*y5*y8*y11*y17**3 + -y1*y8*y11*y17**3*y33 + -y5*y13*y17**3*y24**3*y33 + -y2**4*y5**2*y8*y17**3*y23**4 + y2**4*y5*y14*y23**4*y27**3*y33 + y2**4*y5**3*y11*y22*y23**4*y27**3 + -y1*y5*y11*y13*y17**3*y24**3 + -y1*y11*y13*y17**3*y24**3*y33 + -y2**4*y5*y8*y17**3*y23**4*y33 + -y2**4*y5**2*y13*y17**3*y23**4*y24**3 + y1*y2**4*y5*y11*y14*y23**4*y27**3 + y1*y2**4*y11*y14*y23**4*y27**3*y33 + y2**4*y5**2*y11*y22*y23**4*y27**3*y33 + -y1*y2**4*y5*y8*y11*y17**3*y23**4 + -y1*y2**4*y8*y11*y17**3*y23**4*y33 + -y2**4*y5*y13*y17**3*y23**4*y24**3*y33 + -y1*y2**4*y5*y11*y13*y17**3*y23**4*y24**3 + -y1*y2**4*y11*y13*y17**3*y23**4*y24**3*y33 + -y4*y5**3*y11*y17**3*y25*y26*y27*y28*y29**2 + -y4*y5**3*y11*y17**3*y25*y26*y27*y28**2*y29 + -y4*y5**3*y11*y17**3*y25*y26*y27**2*y28*y29 + -y4*y5**3*y11*y17**3*y25*y26**2*y27*y28*y29 + -y4*y5**3*y11*y17**3*y25**2*y26*y27*y28*y29 + -y4*y5**2*y11*y17**3*y25*y26*y27*y28*y29**2*y33 + -y4*y5**2*y11*y17**3*y25*y26*y27*y28**2*y29*y33 + -y4*y5**2*y11*y17**3*y25*y26*y27**2*y28*y29*y33 + -y4*y5**2*y11*y17**3*y25*y26**2*y27*y28*y29*y33 + -y4*y5**2*y11*y17**3*y25**2*y26*y27*y28*y29*y33 + -y2**4*y4*y5**3*y11*y17**3*y23**4*y25*y26*y27*y28*y29**2 + -y2**4*y4*y5**3*y11*y17**3*y23**4*y25*y26*y27*y28**2*y29 + -y2**4*y4*y5**3*y11*y17**3*y23**4*y25*y26*y27**2*y28*y29 + -y2**4*y4*y5**3*y11*y17**3*y23**4*y25*y26**2*y27*y28*y29 + -y2**4*y4*y5**3*y11*y17**3*y23**4*y25**2*y26*y27*y28*y29 + -y2**4*y4*y5**2*y11*y17**3*y23**4*y25*y26*y27*y28*y29**2*y33 + -y2**4*y4*y5**2*y11*y17**3*y23**4*y25*y26*y27*y28**2*y29*y33 + -y2**4*y4*y5**2*y11*y17**3*y23**4*y25*y26*y27**2*y28*y29*y33 + -y2**4*y4*y5**2*y11*y17**3*y23**4*y25*y26**2*y27*y28*y29*y33 + -y2**4*y4*y5**2*y11*y17**3*y23**4*y25**2*y26*y27*y28*y29*y33)/(y5**2 + y5*y33 + y1*y5*y11 + y1*y11*y33 + y2**4*y5**2*y23**4 + y2**4*y5*y23**4*y33 + y1*y2**4*y5*y11*y23**4 + y1*y2**4*y11*y23**4*y33)
y18' = (y5**4*y39 + y1*y5**3*y11*y39 + y5**3*y11*y20*y28**3 + y5**2*y11*y20*y28**3*y32 + -y4*y5**3*y11*y18**3*y25*y26*y27*y28*y29**2 + -y4*y5**3*y11*y18**3*y25*y26*y27*y28**2*y29 + -y4*y5**3*y11*y18**3*y25*y26*y27**2*y28*y29 + -y4*y5**3*y11*y18**3*y25*y26**2*y27*y28*y29 + -y4*y5**3*y11*y18**3*y25**2*y26*y27*y28*y29 + -y4*y5**2*y11*y18**3*y25*y26*y27*y28*y29**2*y32 + -y4*y5**2*y11*y18**3*y25*y26*y27*y28**2*y29*y32 + -y4*y5**2*y11*y18**3*y25*y26*y27**2*y28*y29*y32 + -y4*y5**2*y11*y18**3*y25*y26**2*y27*y28*y29*y32 + -y4*y5**2*y11*y18**3*y25**2*y26*y27*y28*y29*y32 + -y5**2*y8*y18**3 + -y5*y8*y18**3*y32 + -y1*y5*y8*y11*y18**3 + -y1*y8*y11*y18**3*y32 + -y5**2*y13*y18**3*y24**3 + -y5*y13*y18**3*y24**3*y32 + -y1*y5*y11*y13*y18**3*y24**3 + -y1*y11*y13*y18**3*y24**3*y32 + y5**2*y14*y28**3 + y5*y14*y28**3*y32 + y1*y5*y11*y14*y28**3 + y1*y11*y14*y28**3*y32)/(y5**2 + y5*y32 + y1*y5*y11 + y1*y11*y32)
y19' = (y5**4*y36 + y5**2*y14*y29**3 + -y5**2*y8*y19**3 + y1*y5**3*y11*y36 + y5*y14*y29**3*y33 + y5**3*y11*y22*y29**3 + -y5*y8*y19**3*y33 + -y5**2*y13*y19**3*y24**3 + y1*y5*y11*y14*y29**3 + y1*y11*y14*y29**3*y33 + y5**2*y11*y22*y29**3*y33 + -y1*y5*y8*y11*y19**3 + -y1*y8*y11*y19**3*y33 + -y5*y13*y19**3*y24**3*y33 + -y1*y5*y11*y13*y19**3*y24**3 + -y1*y11*y13*y19**3*y24**3*y33 + -y4*y5**3*y11*y19**3*y25*y26*y27*y28*y29**2 + -y4*y5**3*y11*y19**3*y25*y26*y27*y28**2*y29 + -y4*y5**3*y11*y19**3*y25*y26*y27**2*y28*y29 + -y4*y5**3*y11*y19**3*y25*y26**2*y27*y28*y29 + -y4*y5**3*y11*y19**3*y25**2*y26*y27*y28*y29 + -y4*y5**2*y11*y19**3*y25*y26*y27*y28*y29**2*y33 + -y4*y5**2*y11*y19**3*y25*y26*y27*y28**2*y29*y33 + -y4*y5**2*y11*y19**3*y25*y26*y27**2*y28*y29*y33 + -y4*y5**2*y11*y19**3*y25*y26**2*y27*y28*y29*y33 + -y4*y5**2*y11*y19**3*y25**2*y26*y27*y28*y29*y33)/(y5**2 + y5*y33 + y1*y5*y11 + y1*y11*y33)
y20' = (0)/(1)
y21' = (0)/(1)
y22' = (0)/(1)
y23' = (-y4*y5**2*y11*y23**3*y25*y26*y27*y28*y29**2 + -y4*y5**2*y11*y23**3*y25*y26*y27*y28**2*y29 + -y4*y5**2*y11*y23**3*y25*y26*y27**2*y28*y29 + -y4*y5**2*y11*y23**3*y25*y26**2*y27*y28*y29 + -y4*y5**2*y11*y23**3*y25**2*y26*y27*y28*y29 + y5**2*y11*y22*y27**3)/(y5 + y1*y11)
y24' = (-y1*y11*y13*y19**3*y24**3 + -y5*y13*y19**3*y24**3 + y1*y11*y14*y29**3 + y5*y14*y29**3 + -y1*y11*y13*y15**3*y24**3 + -y5*y13*y15**3*y24**3 + y1*y11*y14*y25**3 + y5*y14*y25**3 + y1*y11*y14*y26**3 + y5*y14*y26**3 + -y1*y11*y13*y16**3*y24**3 + -y5*y13*y16**3*y24**3 + y1*y11*y14*y27**3 + y5*y14*y27**3 + -y1*y11*y13*y17**3*y24**3 + -y5*y13*y17**3*y24**3 + -y4*y5**2*y11*y24**3*y25*y26*y27**2*y28*y29 + -y4*y5**2*y11*y24**3*y25*y26*y27*y28**2*y29 + -y4*y5**2*y11*y24**3*y25*y26**2*y27*y28*y29 + -y4*y5**2*y11*y24**3*y25*y26*y27*y28*y29**2 + -y4*y5**2*y11*y24**3*y25**2*y26*y27*y28*y29 + y5**2*y11*y22*y29**3 + 2*y5**2*y11*y20*y28**3 + y5**2*y11*y22*y26**3 + y5**2*y11*y22*y25**3 + y5**2*y11*y22*y27**3 + -y1*y11*y13*y18**3*y24**3 + -y5*y13*y18**3*y24**3 + y1*y11*y14*y28**3 + y5*y14*y28**3)/(y1*y11 + y5)
y25' = (y1*y6*y11*y40**3 + y5*y6*y40**3 + y1*y11*y13*y15**3*y24**3 + y5*y13*y15**3*y24**3 + -y1*y7*y11*y12*y25**3 + -y5*y7*y12*y25**3 + -y1*y11*y14*y25**3 + -y5*y14*y25**3 + -y5**2*y11*y22*y25**3 + -y4*y5**2*y11*y25**3*y26*y27**2*y28*y29 + -y4*y5**2*y11*y25**3*y26*y27*y28**2*y29 + -y4*y5**2*y11*y25**3*y26**2*y27*y28*y29 + -y4*y5**2*y11*y25**3*y26*y27*y28*y29**2 + -y4*y5**2*y11*y25**4*y26*y27*y28*y29)/(y1*y11 + y5)
y26' = (y1*y6*y11*y41**3 + y5*y6*y41**3 + -y1*y11*y14*y26**3 + -y5*y14*y26**3 + -y1*y7*y11*y12*y26**3 + -y5*y7*y12*y26**3 + y1*y11*y13*y16**3*y24**3 + y5*y13*y16**3*y24**3 + -y5**2*y11*y22*y26**3 + -y4*y5**2*y11*y25*y26**3*y27**2*y28*y29 + -y4*y5**2*y11*y25*y26**3*y27*y28**2*y29 + -y4*y5**2*y11*y25*y26**4*y27*y28*y29 + -y4*y5**2*y11*y25*y26**3*y27*y28*y29**2 + -y4*y5**2*y11*y25**2*y26**3*y27*y28*y29)/(y1*y11 + y5)
y27' = (y1*y6*y11*y42**3 + y5*y6*y42**3 + -y1*y11*y14*y27**3 + -y5*y14*y27**3 + -y1*y7*y11*y12*y27**3 + -y5*y7*y12*y27**3 + y1*y11*y13*y17**3*y24**3 + y5*y13*y17**3*y24**3 + -y4*y5**2*y11*y25*y26*y27**4*y28*y29 + -y4*y5**2*y11*y25*y26*y27**3*y28**2*y29 + -y4*y5**2*y11*y25*y26**2*y27**3*y28*y29 + -y4*y5**2*y11*y25*y26*y27**3*y28*y29**2 + -y4*y5**2*y11*y25**2*y26*y27**3*y28*y29 + -y5**2*y11*y22*y27**3)/(y1*y11 + y5)
y28' = (-y5**2*y11*y20*y28**3 + -y4*y5**2*y11*y25*y26*y27**2*y28**3*y29 + -y4*y5**2*y11*y25*y26*y27*y28**4*y29 + -y4*y5**2*y11*y25*y26**2*y27*y28**3*y29 + -y4*y5**2*y11*y25*y26*y27*y28**3*y29**2 + -y4*y5**2*y11*y25**2*y26*y27*y28**3*y29 + y1*y6*y11*y43**3 + y5*y6*y43**3 + y1*y11*y13*y18**3*y24**3 + y5*y13*y18**3*y24**3 + -y1*y11*y14*y28**3 + -y5*y14*y28**3 + -y1*y7*y11*y12*y28**3 + -y5*y7*y12*y28**3)/(y1*y11 + y5)
y29' = (y1*y6*y11*y44**3 + y5*y6*y44**3 + y1*y11*y13*y19**3*y24**3 + y5*y13*y19**3*y24**3 + -y1*y7*y11*y12*y29**3 + -y5*y7*y12*y29**3 + -y1*y11*y14*y29**3 + -y5*y14*y29**3 + -y5**2*y11*y22*y29**3 + -y4*y5**2*y11*y25*y26*y27**2*y28*y29**3 + -y4*y5**2*y11*y25*y26*y27*y28**2*y29**3 + -y4*y5**2*y11*y25*y26**2*y27*y28*y29**3 + -y4*y5**2*y11*y25*y26*y27*y28*y29**4 + -y4*y5**2*y11*y25**2*y26*y27*y28*y29**3)/(y1*y11 + y5)
y30' = (0)/(1)
y31' = (y0*y5*y10**3*y30*y35 + y5*y10**3*y30*y31*y35 + -y3*y5*y9**2*y31**3*y34 + -y5*y9**2*y30*y31**3*y34 + y0*y1*y10**3*y11*y30*y35 + y1*y10**3*y11*y30*y31*y35 + -y1*y3*y9**2*y11*y31**3*y34 + -y1*y9**2*y11*y30*y31**3*y34 + -y3*y4*y5**2*y11*y25*y26*y27*y28*y29**2*y31**4 + -y3*y4*y5**2*y11*y25*y26*y27*y28**2*y29*y31**4 + -y3*y4*y5**2*y11*y25*y26*y27**2*y28*y29*y31**4 + -y3*y4*y5**2*y11*y25*y26**2*y27*y28*y29*y31**4 + -y3*y4*y5**2*y11*y25**2*y26*y27*y28*y29*y31**4 + -y4*y5**2*y11*y25*y26*y27*y28*y29**2*y30*y31**4 + -y4*y5**2*y11*y25*y26*y27*y28**2*y29*y30*y31**4 + -y4*y5**2*y11*y25*y26*y27**2*y28*y29*y30*y31**4 + -y4*y5**2*y11*y25*y26**2*y27*y28*y29*y30*y31**4 + -y4*y5**2*y11*y25**2*y26*y27*y28*y29*y30*y31**4 + -y0*y3*y4*y5**2*y11*y25*y26*y27*y28*y29**2*y31**3 + -y0*y3*y4*y5**2*y11*y25*y26*y27*y28**2*y29*y31**3 + -y0*y3*y4*y5**2*y11*y25*y26*y27**2*y28*y29*y31**3 + -y0*y3*y4*y5**2*y11*y25*y26**2*y27*y28*y29*y31**3 + -y0*y3*y4*y5**2*y11*y25**2*y26*y27*y28*y29*y31**3 + -y0*y4*y5**2*y11*y25*y26*y27*y28*y29**2*y30*y31**3 + -y0*y4*y5**2*y11*y25*y26*y27*y28**2*y29*y30*y31**3 + -y0*y4*y5**2*y11*y25*y26*y27**2*y28*y29*y30*y31**3 + -y0*y4*y5**2*y11*y25*y26**2*y27*y28*y29*y30*y31**3 + -y0*y4*y5**2*y11*y25**2*y26*y27*y28*y29*y30*y31**3)/(y0*y3*y5 + y0*y5*y30 + y3*y5*y31 + y5*y30*y31 + y0*y1*y3*y11 + y0*y1*y11*y30 + y1*y3*y11*y31 + y1*y11*y30*y31)
y32' = (0)/(1)
y33' = (0)/(1)
y34' = (0)/(1)
y35' = (0)/(1)
y36' = (0)/(1)
y37' = (0)/(1)
y38' = (0)/(1)
y39' = (0)/(1)
y40' = (-y4*y5**2*y11*y25*y26*y27**2*y28*y29*y40**3 + -y4*y5**2*y11*y25*y26*y27*y28**2*y29*y40**3 + -y4*y5**2*y11*y25*y26**2*y27*y28*y29*y40**3 + -y4*y5**2*y11*y25*y26*y27*y28*y29**2*y40**3 + -y4*y5**2*y11*y25**2*y26*y27*y28*y29*y40**3 + -y1*y6*y11*y40**3 + -y5*y6*y40**3 + y1*y7*y11*y12*y25**3 + y5*y7*y12*y25**3)/(y1*y11 + y5)
y41' = (-y1*y6*y11*y41**3 + -y5*y6*y41**3 + -y4*y5**2*y11*y25*y26*y27**2*y28*y29*y41**3 + -y4*y5**2*y11*y25*y26*y27*y28**2*y29*y41**3 + -y4*y5**2*y11*y25*y26**2*y27*y28*y29*y41**3 + -y4*y5**2*y11*y25*y26*y27*y28*y29**2*y41**3 + -y4*y5**2*y11*y25**2*y26*y27*y28*y29*y41**3 + y1*y7*y11*y12*y26**3 + y5*y7*y12*y26**3)/(y1*y11 + y5)
y42' = (-y1*y6*y11*y42**3 + -y5*y6*y42**3 + y1*y7*y11*y12*y27**3 + y5*y7*y12*y27**3 + -y4*y5**2*y11*y25*y26*y27**2*y28*y29*y42**3 + -y4*y5**2*y11*y25*y26*y27*y28**2*y29*y42**3 + -y4*y5**2*y11*y25*y26**2*y27*y28*y29*y42**3 + -y4*y5**2*y11*y25*y26*y27*y28*y29**2*y42**3 + -y4*y5**2*y11*y25**2*y26*y27*y28*y29*y42**3)/(y1*y11 + y5)
y43' = (-y4*y5**2*y11*y25*y26*y27**2*y28*y29*y43**3 + -y4*y5**2*y11*y25*y26*y27*y28**2*y29*y43**3 + -y4*y5**2*y11*y25*y26**2*y27*y28*y29*y43**3 + -y4*y5**2*y11*y25*y26*y27*y28*y29**2*y43**3 + -y4*y5**2*y11*y25**2*y26*y27*y28*y29*y43**3 + -y1*y6*y11*y43**3 + -y5*y6*y43**3 + y1*y7*y11*y12*y28**3 + y5*y7*y12*y28**3)/(y1*y11 + y5)
y44' = (y1*y7*y11*y12*y29**3 + y5*y7*y12*y29**3 + -y1*y6*y11*y44**3 + -y5*y6*y44**3 + -y4*y5**2*y11*y25*y26*y27**2*y28*y29*y44**3 + -y4*y5**2*y11*y25*y26*y27*y28**2*y29*y44**3 + -y4*y5**2*y11*y25*y26**2*y27*y28*y29*y44**3 + -y4*y5**2*y11*y25*y26*y27*y28*y29**2*y44**3 + -y4*y5**2*y11*y25**2*y26*y27*y28*y29*y44**3)/(y1*y11 + y5)
The size of the original model is 46
The size of the reduced model is 45
Computation took 3457.6469535827637 seconds
