load("aggregation.sage")
#e3_curry_FEB2

R = PolynomialRing(QQ, 'x', 29)
x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, = R.gens()
print("Example e3_curry_FEB2")
pEtot = QQ(1)
pFtot = QQ(1)
pStot = QQ(1)
pkOnE = QQ(1)
pkOffE = QQ(1)
pkCatE = QQ(1)
pkOnF = QQ(1)
pkOffF = QQ(1)
pkCatF = QQ(1)

polys = [
-(((pkOnF + pkOnF) + pkOnF)*x1*x2*x17) + (((pkCatE + pkCatE) + pkCatE) / 3)*x11*x16 + (((pkOffF + pkOffF) + pkOffF) / 3)*x12*x18,
-(((pkOnF + pkOnF) + pkOnF)*x1*x2*x17) + -(((((((pkOnF + pkOnF) + pkOnF) + pkOnF) + pkOnF) + pkOnF) / 3)*x2*x12*x17) + -((((pkOnF + pkOnF) + pkOnF) / 3)*x2*x14*x17) + -(((((((pkOnF + pkOnF) + pkOnF) + pkOnF) + pkOnF) + pkOnF) / 3)*x2*x16*x17) + -((((pkOnF + pkOnF) + pkOnF) / 3)*x2*x17*x19) + -(((((((pkOnF + pkOnF) + pkOnF) + pkOnF) + pkOnF) + pkOnF) / 6)*x2*x17*x20) + -((((pkOnF + pkOnF) + pkOnF) / 3)*x2*x17*x22) + -(((((((pkOnF + pkOnF) + pkOnF) + pkOnF) + pkOnF) + pkOnF) / 3)*x2*x17*x23) + -(((((((pkOnF + pkOnF) + pkOnF) + pkOnF) + pkOnF) + pkOnF) / 6)*x2*x17*x25) + -(((((((pkOnF + pkOnF) + pkOnF) + pkOnF) + pkOnF) + pkOnF) / 6)*x2*x17*x27) + (((pkCatF + pkCatF) + pkCatF) / 3)*x12*x13 + (((pkOffF + pkOffF) + pkOffF) / 3)*x12*x18 + ((((((pkCatF + pkCatF) + pkCatF) + pkCatF) + pkCatF) + pkCatF) / 3)*x13*x14 + ((pkCatF + pkCatF) + pkCatF)*x13*x15 + (((pkCatF + pkCatF) + pkCatF) / 3)*x13*x21 + ((((((pkCatF + pkCatF) + pkCatF) + pkCatF) + pkCatF) + pkCatF) / 6)*x13*x24 + ((((((pkCatF + pkCatF) + pkCatF) + pkCatF) + pkCatF) + pkCatF) / 6)*x13*x25 + (((pkCatF + pkCatF) + pkCatF) / 3)*x13*x26 + ((((((pkCatF + pkCatF) + pkCatF) + pkCatF) + pkCatF) + pkCatF) / 6)*x13*x27 + ((((((pkCatF + pkCatF) + pkCatF) + pkCatF) + pkCatF) + pkCatF) / 3)*x13*x28 + ((((((pkCatF + pkCatF) + pkCatF) + pkCatF) + pkCatF) + pkCatF) / 3)*x13*x29 + ((((((pkOffF + pkOffF) + pkOffF) + pkOffF) + pkOffF) + pkOffF) / 3)*x14*x18 + ((pkOffF + pkOffF) + pkOffF)*x15*x18 + (((pkOffF + pkOffF) + pkOffF) / 3)*x18*x21 + ((((((pkOffF + pkOffF) + pkOffF) + pkOffF) + pkOffF) + pkOffF) / 6)*x18*x24 + ((((((pkOffF + pkOffF) + pkOffF) + pkOffF) + pkOffF) + pkOffF) / 6)*x18*x25 + (((pkOffF + pkOffF) + pkOffF) / 3)*x18*x26 + ((((((pkOffF + pkOffF) + pkOffF) + pkOffF) + pkOffF) + pkOffF) / 6)*x18*x27 + ((((((pkOffF + pkOffF) + pkOffF) + pkOffF) + pkOffF) + pkOffF) / 3)*x18*x28 + ((((((pkOffF + pkOffF) + pkOffF) + pkOffF) + pkOffF) + pkOffF) / 3)*x18*x29,
R(0),
-(((pkOnE + pkOnE) + pkOnE)*x4*x5*x6) + -(((((((pkOnE + pkOnE) + pkOnE) + pkOnE) + pkOnE) + pkOnE) / 3)*x4*x6*x7) + -((((pkOnE + pkOnE) + pkOnE) / 3)*x4*x6*x9) + -(((((((pkOnE + pkOnE) + pkOnE) + pkOnE) + pkOnE) + pkOnE) / 3)*x4*x6*x19) + -(((((((pkOnE + pkOnE) + pkOnE) + pkOnE) + pkOnE) + pkOnE) / 6)*x4*x6*x20) + -(((((((pkOnE + pkOnE) + pkOnE) + pkOnE) + pkOnE) + pkOnE) / 3)*x4*x6*x21) + -((((pkOnE + pkOnE) + pkOnE) / 3)*x4*x6*x23) + -(((((((pkOnE + pkOnE) + pkOnE) + pkOnE) + pkOnE) + pkOnE) / 6)*x4*x6*x24) + -(((((((pkOnE + pkOnE) + pkOnE) + pkOnE) + pkOnE) + pkOnE) / 6)*x4*x6*x25) + -((((pkOnE + pkOnE) + pkOnE) / 3)*x4*x6*x28) + (((pkOffE + pkOffE) + pkOffE) / 3)*x7*x8 + (((pkCatE + pkCatE) + pkCatE) / 3)*x7*x11 + ((((((pkOffE + pkOffE) + pkOffE) + pkOffE) + pkOffE) + pkOffE) / 3)*x8*x9 + ((pkOffE + pkOffE) + pkOffE)*x8*x10 + (((pkOffE + pkOffE) + pkOffE) / 3)*x8*x16 + ((((((pkOffE + pkOffE) + pkOffE) + pkOffE) + pkOffE) + pkOffE) / 6)*x8*x20 + ((((((pkOffE + pkOffE) + pkOffE) + pkOffE) + pkOffE) + pkOffE) / 3)*x8*x22 + ((((((pkOffE + pkOffE) + pkOffE) + pkOffE) + pkOffE) + pkOffE) / 6)*x8*x24 + ((((((pkOffE + pkOffE) + pkOffE) + pkOffE) + pkOffE) + pkOffE) / 3)*x8*x26 + ((((((pkOffE + pkOffE) + pkOffE) + pkOffE) + pkOffE) + pkOffE) / 6)*x8*x27 + (((pkOffE + pkOffE) + pkOffE) / 3)*x8*x29 + ((((((pkCatE + pkCatE) + pkCatE) + pkCatE) + pkCatE) + pkCatE) / 3)*x9*x11 + ((pkCatE + pkCatE) + pkCatE)*x10*x11 + (((pkCatE + pkCatE) + pkCatE) / 3)*x11*x16 + ((((((pkCatE + pkCatE) + pkCatE) + pkCatE) + pkCatE) + pkCatE) / 6)*x11*x20 + ((((((pkCatE + pkCatE) + pkCatE) + pkCatE) + pkCatE) + pkCatE) / 3)*x11*x22 + ((((((pkCatE + pkCatE) + pkCatE) + pkCatE) + pkCatE) + pkCatE) / 6)*x11*x24 + ((((((pkCatE + pkCatE) + pkCatE) + pkCatE) + pkCatE) + pkCatE) / 3)*x11*x26 + ((((((pkCatE + pkCatE) + pkCatE) + pkCatE) + pkCatE) + pkCatE) / 6)*x11*x27 + (((pkCatE + pkCatE) + pkCatE) / 3)*x11*x29,
-(((pkOnE + pkOnE) + pkOnE)*x4*x5*x6) + (((pkOffE + pkOffE) + pkOffE) / 3)*x7*x8 + (((pkCatF + pkCatF) + pkCatF) / 3)*x13*x21,
R(0),
((pkOnE + pkOnE) + pkOnE)*x4*x5*x6 + -(((((((pkOnE + pkOnE) + pkOnE) + pkOnE) + pkOnE) + pkOnE) / 3)*x4*x6*x7) + -((((pkOffE + pkOffE) + pkOffE) / 3)*x7*x8) + -((((pkCatE + pkCatE) + pkCatE) / 3)*x7*x11) + ((((((pkOffE + pkOffE) + pkOffE) + pkOffE) + pkOffE) + pkOffE) / 3)*x8*x9 + ((((((pkCatF + pkCatF) + pkCatF) + pkCatF) + pkCatF) + pkCatF) / 6)*x13*x24,
R(0),
((((((pkOnE + pkOnE) + pkOnE) + pkOnE) + pkOnE) + pkOnE) / 3)*x4*x6*x7 + -((((pkOnE + pkOnE) + pkOnE) / 3)*x4*x6*x9) + -(((((((pkOffE + pkOffE) + pkOffE) + pkOffE) + pkOffE) + pkOffE) / 3)*x8*x9) + ((pkOffE + pkOffE) + pkOffE)*x8*x10 + -(((((((pkCatE + pkCatE) + pkCatE) + pkCatE) + pkCatE) + pkCatE) / 3)*x9*x11) + (((pkCatF + pkCatF) + pkCatF) / 3)*x13*x26,
(((pkOnE + pkOnE) + pkOnE) / 3)*x4*x6*x9 + -(((pkOffE + pkOffE) + pkOffE)*x8*x10) + -(((pkCatE + pkCatE) + pkCatE)*x10*x11),
R(0),
((pkOnF + pkOnF) + pkOnF)*x1*x2*x17 + -(((((((pkOnF + pkOnF) + pkOnF) + pkOnF) + pkOnF) + pkOnF) / 3)*x2*x12*x17) + ((((((pkCatE + pkCatE) + pkCatE) + pkCatE) + pkCatE) + pkCatE) / 6)*x11*x27 + -((((pkCatF + pkCatF) + pkCatF) / 3)*x12*x13) + -((((pkOffF + pkOffF) + pkOffF) / 3)*x12*x18) + ((((((pkOffF + pkOffF) + pkOffF) + pkOffF) + pkOffF) + pkOffF) / 3)*x14*x18,
R(0),
((((((pkOnF + pkOnF) + pkOnF) + pkOnF) + pkOnF) + pkOnF) / 3)*x2*x12*x17 + -((((pkOnF + pkOnF) + pkOnF) / 3)*x2*x14*x17) + (((pkCatE + pkCatE) + pkCatE) / 3)*x11*x29 + -(((((((pkCatF + pkCatF) + pkCatF) + pkCatF) + pkCatF) + pkCatF) / 3)*x13*x14) + -(((((((pkOffF + pkOffF) + pkOffF) + pkOffF) + pkOffF) + pkOffF) / 3)*x14*x18) + ((pkOffF + pkOffF) + pkOffF)*x15*x18,
(((pkOnF + pkOnF) + pkOnF) / 3)*x2*x14*x17 + -(((pkCatF + pkCatF) + pkCatF)*x13*x15) + -(((pkOffF + pkOffF) + pkOffF)*x15*x18),
-(((((((pkOnF + pkOnF) + pkOnF) + pkOnF) + pkOnF) + pkOnF) / 3)*x2*x16*x17) + (((pkOnE + pkOnE) + pkOnE) / 3)*x4*x6*x23 + -((((pkOffE + pkOffE) + pkOffE) / 3)*x8*x16) + -((((pkCatE + pkCatE) + pkCatE) / 3)*x11*x16) + ((((((pkCatE + pkCatE) + pkCatE) + pkCatE) + pkCatE) + pkCatE) / 3)*x11*x22 + ((((((pkOffF + pkOffF) + pkOffF) + pkOffF) + pkOffF) + pkOffF) / 6)*x18*x27,
R(0),
R(0),
-((((pkOnF + pkOnF) + pkOnF) / 3)*x2*x17*x19) + -(((((((pkOnE + pkOnE) + pkOnE) + pkOnE) + pkOnE) + pkOnE) / 3)*x4*x6*x19) + (((pkCatE + pkCatE) + pkCatE) / 3)*x7*x11 + ((((((pkOffE + pkOffE) + pkOffE) + pkOffE) + pkOffE) + pkOffE) / 6)*x8*x20 + ((((((pkCatF + pkCatF) + pkCatF) + pkCatF) + pkCatF) + pkCatF) / 6)*x13*x25 + (((pkOffF + pkOffF) + pkOffF) / 3)*x18*x21,
-(((((((pkOnF + pkOnF) + pkOnF) + pkOnF) + pkOnF) + pkOnF) / 6)*x2*x17*x20) + ((((((pkOnE + pkOnE) + pkOnE) + pkOnE) + pkOnE) + pkOnE) / 3)*x4*x6*x19 + -(((((((pkOnE + pkOnE) + pkOnE) + pkOnE) + pkOnE) + pkOnE) / 6)*x4*x6*x20) + -(((((((pkOffE + pkOffE) + pkOffE) + pkOffE) + pkOffE) + pkOffE) / 6)*x8*x20) + ((((((pkOffE + pkOffE) + pkOffE) + pkOffE) + pkOffE) + pkOffE) / 3)*x8*x22 + ((((((pkCatE + pkCatE) + pkCatE) + pkCatE) + pkCatE) + pkCatE) / 3)*x9*x11 + -(((((((pkCatE + pkCatE) + pkCatE) + pkCatE) + pkCatE) + pkCatE) / 6)*x11*x20) + ((((((pkCatF + pkCatF) + pkCatF) + pkCatF) + pkCatF) + pkCatF) / 6)*x13*x27 + ((((((pkOffF + pkOffF) + pkOffF) + pkOffF) + pkOffF) + pkOffF) / 6)*x18*x24,
(((pkOnF + pkOnF) + pkOnF) / 3)*x2*x17*x19 + -(((((((pkOnE + pkOnE) + pkOnE) + pkOnE) + pkOnE) + pkOnE) / 3)*x4*x6*x21) + ((((((pkOffE + pkOffE) + pkOffE) + pkOffE) + pkOffE) + pkOffE) / 6)*x8*x24 + -((((pkCatF + pkCatF) + pkCatF) / 3)*x13*x21) + ((((((pkCatF + pkCatF) + pkCatF) + pkCatF) + pkCatF) + pkCatF) / 3)*x13*x28 + -((((pkOffF + pkOffF) + pkOffF) / 3)*x18*x21),
-((((pkOnF + pkOnF) + pkOnF) / 3)*x2*x17*x22) + ((((((pkOnE + pkOnE) + pkOnE) + pkOnE) + pkOnE) + pkOnE) / 6)*x4*x6*x20 + -(((((((pkOffE + pkOffE) + pkOffE) + pkOffE) + pkOffE) + pkOffE) / 3)*x8*x22) + ((pkCatE + pkCatE) + pkCatE)*x10*x11 + -(((((((pkCatE + pkCatE) + pkCatE) + pkCatE) + pkCatE) + pkCatE) / 3)*x11*x22) + (((pkOffF + pkOffF) + pkOffF) / 3)*x18*x26,
-(((((((pkOnF + pkOnF) + pkOnF) + pkOnF) + pkOnF) + pkOnF) / 3)*x2*x17*x23) + -((((pkOnE + pkOnE) + pkOnE) / 3)*x4*x6*x23) + (((pkOffE + pkOffE) + pkOffE) / 3)*x8*x16 + ((((((pkCatE + pkCatE) + pkCatE) + pkCatE) + pkCatE) + pkCatE) / 6)*x11*x20 + (((pkCatF + pkCatF) + pkCatF) / 3)*x12*x13 + ((((((pkOffF + pkOffF) + pkOffF) + pkOffF) + pkOffF) + pkOffF) / 6)*x18*x25,
((((((pkOnF + pkOnF) + pkOnF) + pkOnF) + pkOnF) + pkOnF) / 6)*x2*x17*x20 + ((((((pkOnE + pkOnE) + pkOnE) + pkOnE) + pkOnE) + pkOnE) / 3)*x4*x6*x21 + -(((((((pkOnE + pkOnE) + pkOnE) + pkOnE) + pkOnE) + pkOnE) / 6)*x4*x6*x24) + -(((((((pkOffE + pkOffE) + pkOffE) + pkOffE) + pkOffE) + pkOffE) / 6)*x8*x24) + ((((((pkOffE + pkOffE) + pkOffE) + pkOffE) + pkOffE) + pkOffE) / 3)*x8*x26 + -(((((((pkCatE + pkCatE) + pkCatE) + pkCatE) + pkCatE) + pkCatE) / 6)*x11*x24) + -(((((((pkCatF + pkCatF) + pkCatF) + pkCatF) + pkCatF) + pkCatF) / 6)*x13*x24) + ((((((pkCatF + pkCatF) + pkCatF) + pkCatF) + pkCatF) + pkCatF) / 3)*x13*x29 + -(((((((pkOffF + pkOffF) + pkOffF) + pkOffF) + pkOffF) + pkOffF) / 6)*x18*x24),
((((((pkOnF + pkOnF) + pkOnF) + pkOnF) + pkOnF) + pkOnF) / 3)*x2*x17*x23 + -(((((((pkOnF + pkOnF) + pkOnF) + pkOnF) + pkOnF) + pkOnF) / 6)*x2*x17*x25) + -(((((((pkOnE + pkOnE) + pkOnE) + pkOnE) + pkOnE) + pkOnE) / 6)*x4*x6*x25) + ((((((pkOffE + pkOffE) + pkOffE) + pkOffE) + pkOffE) + pkOffE) / 6)*x8*x27 + ((((((pkCatE + pkCatE) + pkCatE) + pkCatE) + pkCatE) + pkCatE) / 6)*x11*x24 + ((((((pkCatF + pkCatF) + pkCatF) + pkCatF) + pkCatF) + pkCatF) / 3)*x13*x14 + -(((((((pkCatF + pkCatF) + pkCatF) + pkCatF) + pkCatF) + pkCatF) / 6)*x13*x25) + -(((((((pkOffF + pkOffF) + pkOffF) + pkOffF) + pkOffF) + pkOffF) / 6)*x18*x25) + ((((((pkOffF + pkOffF) + pkOffF) + pkOffF) + pkOffF) + pkOffF) / 3)*x18*x28,
(((pkOnF + pkOnF) + pkOnF) / 3)*x2*x17*x22 + ((((((pkOnE + pkOnE) + pkOnE) + pkOnE) + pkOnE) + pkOnE) / 6)*x4*x6*x24 + -(((((((pkOffE + pkOffE) + pkOffE) + pkOffE) + pkOffE) + pkOffE) / 3)*x8*x26) + -(((((((pkCatE + pkCatE) + pkCatE) + pkCatE) + pkCatE) + pkCatE) / 3)*x11*x26) + -((((pkCatF + pkCatF) + pkCatF) / 3)*x13*x26) + -((((pkOffF + pkOffF) + pkOffF) / 3)*x18*x26),
((((((pkOnF + pkOnF) + pkOnF) + pkOnF) + pkOnF) + pkOnF) / 3)*x2*x16*x17 + -(((((((pkOnF + pkOnF) + pkOnF) + pkOnF) + pkOnF) + pkOnF) / 6)*x2*x17*x27) + ((((((pkOnE + pkOnE) + pkOnE) + pkOnE) + pkOnE) + pkOnE) / 6)*x4*x6*x25 + -(((((((pkOffE + pkOffE) + pkOffE) + pkOffE) + pkOffE) + pkOffE) / 6)*x8*x27) + ((((((pkCatE + pkCatE) + pkCatE) + pkCatE) + pkCatE) + pkCatE) / 3)*x11*x26 + -(((((((pkCatE + pkCatE) + pkCatE) + pkCatE) + pkCatE) + pkCatE) / 6)*x11*x27) + -(((((((pkCatF + pkCatF) + pkCatF) + pkCatF) + pkCatF) + pkCatF) / 6)*x13*x27) + -(((((((pkOffF + pkOffF) + pkOffF) + pkOffF) + pkOffF) + pkOffF) / 6)*x18*x27) + ((((((pkOffF + pkOffF) + pkOffF) + pkOffF) + pkOffF) + pkOffF) / 3)*x18*x29,
((((((pkOnF + pkOnF) + pkOnF) + pkOnF) + pkOnF) + pkOnF) / 6)*x2*x17*x25 + -((((pkOnE + pkOnE) + pkOnE) / 3)*x4*x6*x28) + (((pkOffE + pkOffE) + pkOffE) / 3)*x8*x29 + ((pkCatF + pkCatF) + pkCatF)*x13*x15 + -(((((((pkCatF + pkCatF) + pkCatF) + pkCatF) + pkCatF) + pkCatF) / 3)*x13*x28) + -(((((((pkOffF + pkOffF) + pkOffF) + pkOffF) + pkOffF) + pkOffF) / 3)*x18*x28),
((((((pkOnF + pkOnF) + pkOnF) + pkOnF) + pkOnF) + pkOnF) / 6)*x2*x17*x27 + (((pkOnE + pkOnE) + pkOnE) / 3)*x4*x6*x28 + -((((pkOffE + pkOffE) + pkOffE) / 3)*x8*x29) + -((((pkCatE + pkCatE) + pkCatE) / 3)*x11*x29) + -(((((((pkCatF + pkCatF) + pkCatF) + pkCatF) + pkCatF) + pkCatF) / 3)*x13*x29) + -(((((((pkOffF + pkOffF) + pkOffF) + pkOffF) + pkOffF) + pkOffF) / 3)*x18*x29),
]

#Partition for that block [] which translates to:
result = aggregate(polys, [x2])

print("Total for e3_curry_FEB2, S1, is " + str(len(result)))
