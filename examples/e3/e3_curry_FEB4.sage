load("aggregation.sage")
#e3_curry_FEB4

R = PolynomialRing(QQ, 'x', 49)
x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, = R.gens()
print("Example e3_curry_FEB4")
pEtot = QQ(1)
pFtot = QQ(1)
pStot = QQ(1)
pkOnE = QQ(1)
pkOffE = QQ(1)
pkCatE = QQ(1)
pkOnF = QQ(1)
pkOffF = QQ(1)
pkCatF = QQ(1)

polys = [
R(0),
-((pkOnE + pkOnE)*x2*x3*x4) + -pkOnE*x2*x3*x4 + -(((pkOnE + pkOnE) / 2)*x2*x4*x5) + -(((pkOnE + pkOnE) / 2)*x2*x4*x5) + -((pkOnE + pkOnE)*x2*x4*x6) + -pkOnE*x2*x4*x9 + -(((pkOnE + pkOnE) / 2)*x2*x4*x10) + -(((pkOnE + pkOnE) / 2)*x2*x4*x10) + -(((pkOnE + pkOnE) / 2)*x2*x4*x11) + -((pkOnE + pkOnE)*x2*x4*x12) + -(((pkOnE + pkOnE) / 2)*x2*x4*x13) + -(((pkOnE + pkOnE) / 2)*x2*x4*x14) + -(((pkOnE + pkOnE) / 2)*x2*x4*x14) + -(((pkOnE + pkOnE) / 2)*x2*x4*x16) + -(((pkOnE + pkOnE) / 2)*x2*x4*x17) + -((pkOnE + pkOnE)*x2*x4*x18) + -(((pkOnE + pkOnE) / 2)*x2*x4*x19) + -pkOnE*x2*x4*x20 + -(((pkOnE + pkOnE) / 2)*x2*x4*x22) + -(((pkOnE + pkOnE) / 2)*x2*x4*x23) + -(((pkOnE + pkOnE) / 2)*x2*x4*x24) + -(((pkOnE + pkOnE) / 2)*x2*x4*x26) + -(((pkOnE + pkOnE) / 2)*x2*x4*x29) + -(((pkOnE + pkOnE) / 2)*x2*x4*x30) + -pkOnE*x2*x4*x33 + -(((pkOnE + pkOnE) / 2)*x2*x4*x35) + ((pkOffE + pkOffE) / 2)*x5*x7 + ((pkCatE + pkCatE) / 2)*x5*x8 + pkOffE*x6*x7 + pkCatE*x6*x8 + (pkOffE + pkOffE)*x7*x9 + ((pkOffE + pkOffE) / 2)*x7*x11 + ((pkOffE + pkOffE) / 2)*x7*x11 + ((pkOffE + pkOffE) / 2)*x7*x13 + pkOffE*x7*x15 + (pkOffE + pkOffE)*x7*x15 + ((pkOffE + pkOffE) / 2)*x7*x16 + ((pkOffE + pkOffE) / 2)*x7*x17 + ((pkOffE + pkOffE) / 2)*x7*x19 + ((pkOffE + pkOffE) / 2)*x7*x21 + ((pkOffE + pkOffE) / 2)*x7*x21 + ((pkOffE + pkOffE) / 2)*x7*x22 + ((pkOffE + pkOffE) / 2)*x7*x24 + (pkOffE + pkOffE)*x7*x25 + ((pkOffE + pkOffE) / 2)*x7*x27 + ((pkOffE + pkOffE) / 2)*x7*x27 + pkOffE*x7*x28 + ((pkOffE + pkOffE) / 2)*x7*x31 + (pkOffE + pkOffE)*x7*x32 + ((pkOffE + pkOffE) / 2)*x7*x34 + ((pkOffE + pkOffE) / 2)*x7*x36 + ((pkOffE + pkOffE) / 2)*x7*x37 + pkOffE*x7*x38 + ((pkOffE + pkOffE) / 2)*x7*x39 + (pkCatE + pkCatE)*x8*x9 + ((pkCatE + pkCatE) / 2)*x8*x11 + ((pkCatE + pkCatE) / 2)*x8*x11 + ((pkCatE + pkCatE) / 2)*x8*x13 + (pkCatE + pkCatE)*x8*x15 + pkCatE*x8*x15 + ((pkCatE + pkCatE) / 2)*x8*x16 + ((pkCatE + pkCatE) / 2)*x8*x17 + ((pkCatE + pkCatE) / 2)*x8*x19 + ((pkCatE + pkCatE) / 2)*x8*x21 + ((pkCatE + pkCatE) / 2)*x8*x21 + ((pkCatE + pkCatE) / 2)*x8*x22 + ((pkCatE + pkCatE) / 2)*x8*x24 + (pkCatE + pkCatE)*x8*x25 + ((pkCatE + pkCatE) / 2)*x8*x27 + ((pkCatE + pkCatE) / 2)*x8*x27 + pkCatE*x8*x28 + ((pkCatE + pkCatE) / 2)*x8*x31 + (pkCatE + pkCatE)*x8*x32 + ((pkCatE + pkCatE) / 2)*x8*x34 + ((pkCatE + pkCatE) / 2)*x8*x36 + ((pkCatE + pkCatE) / 2)*x8*x37 + pkCatE*x8*x38 + ((pkCatE + pkCatE) / 2)*x8*x39,
-((pkOnE + pkOnE)*x2*x3*x4) + -pkOnE*x2*x3*x4 + ((pkOffE + pkOffE) / 2)*x5*x7 + pkOffE*x6*x7 + ((pkCatF + pkCatF) / 2)*x14*x43 + pkCatF*x18*x43,
R(0),
(pkOnE + pkOnE)*x2*x3*x4 + -(((pkOnE + pkOnE) / 2)*x2*x4*x5) + -(((pkOnE + pkOnE) / 2)*x2*x4*x5) + -(((pkOffE + pkOffE) / 2)*x5*x7) + -(((pkCatE + pkCatE) / 2)*x5*x8) + (pkOffE + pkOffE)*x7*x9 + ((pkOffE + pkOffE) / 2)*x7*x11 + ((pkCatF + pkCatF) / 2)*x19*x43 + ((pkCatF + pkCatF) / 2)*x24*x43,
pkOnE*x2*x3*x4 + -((pkOnE + pkOnE)*x2*x4*x6) + -pkOffE*x6*x7 + -pkCatE*x6*x8 + ((pkOffE + pkOffE) / 2)*x7*x11 + ((pkCatF + pkCatF) / 2)*x22*x43,
R(0),
R(0),
((pkOnE + pkOnE) / 2)*x2*x4*x5 + -pkOnE*x2*x4*x9 + -((pkOffE + pkOffE)*x7*x9) + pkOffE*x7*x15 + -((pkCatE + pkCatE)*x8*x9) + pkCatF*x32*x43,
-(((pkOnE + pkOnE) / 2)*x2*x4*x10) + -(((pkOnE + pkOnE) / 2)*x2*x4*x10) + ((pkCatE + pkCatE) / 2)*x5*x8 + ((pkOffE + pkOffE) / 2)*x7*x13 + ((pkOffE + pkOffE) / 2)*x7*x16 + -(((pkOnF + pkOnF) / 2)*x10*x40*x41) + ((pkOffF + pkOffF) / 2)*x14*x42 + ((pkCatF + pkCatF) / 2)*x26*x43 + ((pkCatF + pkCatF) / 2)*x30*x43,
((pkOnE + pkOnE) / 2)*x2*x4*x5 + (pkOnE + pkOnE)*x2*x4*x6 + -(((pkOnE + pkOnE) / 2)*x2*x4*x11) + -(((pkOffE + pkOffE) / 2)*x7*x11) + -(((pkOffE + pkOffE) / 2)*x7*x11) + (pkOffE + pkOffE)*x7*x15 + -(((pkCatE + pkCatE) / 2)*x8*x11) + -(((pkCatE + pkCatE) / 2)*x8*x11) + ((pkCatF + pkCatF) / 2)*x27*x43,
-((pkOnE + pkOnE)*x2*x4*x12) + pkCatE*x6*x8 + ((pkOffE + pkOffE) / 2)*x7*x17 + -pkOnF*x12*x40*x41 + pkOffF*x18*x42 + ((pkCatF + pkCatF) / 2)*x29*x43,
((pkOnE + pkOnE) / 2)*x2*x4*x10 + -(((pkOnE + pkOnE) / 2)*x2*x4*x13) + -(((pkOffE + pkOffE) / 2)*x7*x13) + ((pkOffE + pkOffE) / 2)*x7*x21 + (pkCatE + pkCatE)*x8*x9 + -(((pkCatE + pkCatE) / 2)*x8*x13) + -(((pkOnF + pkOnF) / 2)*x13*x40*x41) + ((pkOffF + pkOffF) / 2)*x19*x42 + ((pkCatF + pkCatF) / 2)*x37*x43,
-(((pkOnE + pkOnE) / 2)*x2*x4*x14) + -(((pkOnE + pkOnE) / 2)*x2*x4*x14) + ((pkOffE + pkOffE) / 2)*x7*x19 + ((pkOffE + pkOffE) / 2)*x7*x22 + ((pkOnF + pkOnF) / 2)*x10*x40*x41 + -(((pkOffF + pkOffF) / 2)*x14*x42) + -(((pkCatF + pkCatF) / 2)*x14*x43) + (pkCatF + pkCatF)*x33*x43 + ((pkCatF + pkCatF) / 2)*x35*x43,
pkOnE*x2*x4*x9 + ((pkOnE + pkOnE) / 2)*x2*x4*x11 + -pkOffE*x7*x15 + -((pkOffE + pkOffE)*x7*x15) + -((pkCatE + pkCatE)*x8*x15) + -pkCatE*x8*x15,
((pkOnE + pkOnE) / 2)*x2*x4*x10 + -(((pkOnE + pkOnE) / 2)*x2*x4*x16) + -(((pkOffE + pkOffE) / 2)*x7*x16) + ((pkOffE + pkOffE) / 2)*x7*x21 + ((pkCatE + pkCatE) / 2)*x8*x11 + -(((pkCatE + pkCatE) / 2)*x8*x16) + -(((pkOnF + pkOnF) / 2)*x16*x40*x41) + ((pkOffF + pkOffF) / 2)*x22*x42 + ((pkCatF + pkCatF) / 2)*x34*x43,
(pkOnE + pkOnE)*x2*x4*x12 + -(((pkOnE + pkOnE) / 2)*x2*x4*x17) + -(((pkOffE + pkOffE) / 2)*x7*x17) + (pkOffE + pkOffE)*x7*x25 + ((pkCatE + pkCatE) / 2)*x8*x11 + -(((pkCatE + pkCatE) / 2)*x8*x17) + -(((pkOnF + pkOnF) / 2)*x17*x40*x41) + ((pkOffF + pkOffF) / 2)*x24*x42 + ((pkCatF + pkCatF) / 2)*x36*x43,
-((pkOnE + pkOnE)*x2*x4*x18) + ((pkOffE + pkOffE) / 2)*x7*x24 + pkOnF*x12*x40*x41 + -pkOffF*x18*x42 + -pkCatF*x18*x43 + ((pkCatF + pkCatF) / 2)*x35*x43,
((pkOnE + pkOnE) / 2)*x2*x4*x14 + -(((pkOnE + pkOnE) / 2)*x2*x4*x19) + -(((pkOffE + pkOffE) / 2)*x7*x19) + ((pkOffE + pkOffE) / 2)*x7*x27 + -(((pkCatE + pkCatE) / 2)*x8*x19) + ((pkOnF + pkOnF) / 2)*x13*x40*x41 + -(((pkOffF + pkOffF) / 2)*x19*x42) + -(((pkCatF + pkCatF) / 2)*x19*x43) + ((pkCatF + pkCatF) / 2)*x39*x43,
-pkOnE*x2*x4*x20 + pkOffE*x7*x28 + ((pkCatE + pkCatE) / 2)*x8*x13 + -((pkOnF + pkOnF)*x20*x40*x41) + ((pkOffF + pkOffF) / 2)*x26*x42 + pkCatF*x43*x46,
((pkOnE + pkOnE) / 2)*x2*x4*x13 + ((pkOnE + pkOnE) / 2)*x2*x4*x16 + -(((pkOffE + pkOffE) / 2)*x7*x21) + -(((pkOffE + pkOffE) / 2)*x7*x21) + (pkCatE + pkCatE)*x8*x15 + -(((pkCatE + pkCatE) / 2)*x8*x21) + -(((pkCatE + pkCatE) / 2)*x8*x21) + -(((pkOnF + pkOnF) / 2)*x21*x40*x41) + ((pkOffF + pkOffF) / 2)*x27*x42,
((pkOnE + pkOnE) / 2)*x2*x4*x14 + -(((pkOnE + pkOnE) / 2)*x2*x4*x22) + -(((pkOffE + pkOffE) / 2)*x7*x22) + ((pkOffE + pkOffE) / 2)*x7*x27 + -(((pkCatE + pkCatE) / 2)*x8*x22) + ((pkOnF + pkOnF) / 2)*x16*x40*x41 + -(((pkOffF + pkOffF) / 2)*x22*x42) + -(((pkCatF + pkCatF) / 2)*x22*x43) + (pkCatF + pkCatF)*x38*x43,
-(((pkOnE + pkOnE) / 2)*x2*x4*x23) + ((pkOffE + pkOffE) / 2)*x7*x31 + ((pkCatE + pkCatE) / 2)*x8*x16 + ((pkCatE + pkCatE) / 2)*x8*x17 + -(((pkOnF + pkOnF) / 2)*x23*x40*x41) + -(((pkOnF + pkOnF) / 2)*x23*x40*x41) + ((pkOffF + pkOffF) / 2)*x29*x42 + ((pkOffF + pkOffF) / 2)*x30*x42 + ((pkCatF + pkCatF) / 2)*x43*x45,
(pkOnE + pkOnE)*x2*x4*x18 + -(((pkOnE + pkOnE) / 2)*x2*x4*x24) + -(((pkOffE + pkOffE) / 2)*x7*x24) + (pkOffE + pkOffE)*x7*x32 + -(((pkCatE + pkCatE) / 2)*x8*x24) + ((pkOnF + pkOnF) / 2)*x17*x40*x41 + -(((pkOffF + pkOffF) / 2)*x24*x42) + -(((pkCatF + pkCatF) / 2)*x24*x43) + ((pkCatF + pkCatF) / 2)*x39*x43,
((pkOnE + pkOnE) / 2)*x2*x4*x17 + -((pkOffE + pkOffE)*x7*x25) + pkCatE*x8*x15 + -((pkCatE + pkCatE)*x8*x25) + -pkOnF*x25*x40*x41 + pkOffF*x32*x42,
-(((pkOnE + pkOnE) / 2)*x2*x4*x26) + ((pkOffE + pkOffE) / 2)*x7*x34 + ((pkCatE + pkCatE) / 2)*x8*x19 + (pkOnF + pkOnF)*x20*x40*x41 + -(((pkOnF + pkOnF) / 2)*x26*x40*x41) + -(((pkOffF + pkOffF) / 2)*x26*x42) + -(((pkCatF + pkCatF) / 2)*x26*x43) + (pkOffF + pkOffF)*x33*x42 + ((pkCatF + pkCatF) / 2)*x43*x48,
((pkOnE + pkOnE) / 2)*x2*x4*x19 + ((pkOnE + pkOnE) / 2)*x2*x4*x22 + -(((pkOffE + pkOffE) / 2)*x7*x27) + -(((pkOffE + pkOffE) / 2)*x7*x27) + -(((pkCatE + pkCatE) / 2)*x8*x27) + -(((pkCatE + pkCatE) / 2)*x8*x27) + ((pkOnF + pkOnF) / 2)*x21*x40*x41 + -(((pkOffF + pkOffF) / 2)*x27*x42) + -(((pkCatF + pkCatF) / 2)*x27*x43),
pkOnE*x2*x4*x20 + -pkOffE*x7*x28 + ((pkCatE + pkCatE) / 2)*x8*x21 + -pkCatE*x8*x28 + -((pkOnF + pkOnF)*x28*x40*x41) + ((pkOffF + pkOffF) / 2)*x34*x42,
-(((pkOnE + pkOnE) / 2)*x2*x4*x29) + ((pkOffE + pkOffE) / 2)*x7*x36 + ((pkCatE + pkCatE) / 2)*x8*x22 + ((pkOnF + pkOnF) / 2)*x23*x40*x41 + -(((pkOnF + pkOnF) / 2)*x29*x40*x41) + -(((pkOffF + pkOffF) / 2)*x29*x42) + -(((pkCatF + pkCatF) / 2)*x29*x43) + ((pkOffF + pkOffF) / 2)*x35*x42 + (pkCatF + pkCatF)*x43*x47,
-(((pkOnE + pkOnE) / 2)*x2*x4*x30) + ((pkOffE + pkOffE) / 2)*x7*x37 + ((pkCatE + pkCatE) / 2)*x8*x24 + ((pkOnF + pkOnF) / 2)*x23*x40*x41 + -(((pkOnF + pkOnF) / 2)*x30*x40*x41) + -(((pkOffF + pkOffF) / 2)*x30*x42) + -(((pkCatF + pkCatF) / 2)*x30*x43) + ((pkOffF + pkOffF) / 2)*x35*x42 + ((pkCatF + pkCatF) / 2)*x43*x48,
((pkOnE + pkOnE) / 2)*x2*x4*x23 + -(((pkOffE + pkOffE) / 2)*x7*x31) + ((pkCatE + pkCatE) / 2)*x8*x21 + (pkCatE + pkCatE)*x8*x25 + -(((pkCatE + pkCatE) / 2)*x8*x31) + -(((pkOnF + pkOnF) / 2)*x31*x40*x41) + -(((pkOnF + pkOnF) / 2)*x31*x40*x41) + ((pkOffF + pkOffF) / 2)*x36*x42 + ((pkOffF + pkOffF) / 2)*x37*x42,
((pkOnE + pkOnE) / 2)*x2*x4*x24 + -((pkOffE + pkOffE)*x7*x32) + -((pkCatE + pkCatE)*x8*x32) + pkOnF*x25*x40*x41 + -pkOffF*x32*x42 + -pkCatF*x32*x43,
-pkOnE*x2*x4*x33 + pkOffE*x7*x38 + ((pkOnF + pkOnF) / 2)*x26*x40*x41 + -((pkOffF + pkOffF)*x33*x42) + -((pkCatF + pkCatF)*x33*x43) + pkCatF*x43*x49,
((pkOnE + pkOnE) / 2)*x2*x4*x26 + -(((pkOffE + pkOffE) / 2)*x7*x34) + ((pkCatE + pkCatE) / 2)*x8*x27 + -(((pkCatE + pkCatE) / 2)*x8*x34) + (pkOnF + pkOnF)*x28*x40*x41 + -(((pkOnF + pkOnF) / 2)*x34*x40*x41) + -(((pkOffF + pkOffF) / 2)*x34*x42) + -(((pkCatF + pkCatF) / 2)*x34*x43) + (pkOffF + pkOffF)*x38*x42,
-(((pkOnE + pkOnE) / 2)*x2*x4*x35) + ((pkOffE + pkOffE) / 2)*x7*x39 + ((pkOnF + pkOnF) / 2)*x29*x40*x41 + ((pkOnF + pkOnF) / 2)*x30*x40*x41 + -(((pkOffF + pkOffF) / 2)*x35*x42) + -(((pkOffF + pkOffF) / 2)*x35*x42) + -(((pkCatF + pkCatF) / 2)*x35*x43) + -(((pkCatF + pkCatF) / 2)*x35*x43) + (pkCatF + pkCatF)*x43*x49,
((pkOnE + pkOnE) / 2)*x2*x4*x29 + -(((pkOffE + pkOffE) / 2)*x7*x36) + ((pkCatE + pkCatE) / 2)*x8*x27 + -(((pkCatE + pkCatE) / 2)*x8*x36) + ((pkOnF + pkOnF) / 2)*x31*x40*x41 + -(((pkOnF + pkOnF) / 2)*x36*x40*x41) + -(((pkOffF + pkOffF) / 2)*x36*x42) + -(((pkCatF + pkCatF) / 2)*x36*x43) + ((pkOffF + pkOffF) / 2)*x39*x42,
((pkOnE + pkOnE) / 2)*x2*x4*x30 + -(((pkOffE + pkOffE) / 2)*x7*x37) + (pkCatE + pkCatE)*x8*x32 + -(((pkCatE + pkCatE) / 2)*x8*x37) + ((pkOnF + pkOnF) / 2)*x31*x40*x41 + -(((pkOnF + pkOnF) / 2)*x37*x40*x41) + -(((pkOffF + pkOffF) / 2)*x37*x42) + -(((pkCatF + pkCatF) / 2)*x37*x43) + ((pkOffF + pkOffF) / 2)*x39*x42,
pkOnE*x2*x4*x33 + -pkOffE*x7*x38 + -pkCatE*x8*x38 + ((pkOnF + pkOnF) / 2)*x34*x40*x41 + -((pkOffF + pkOffF)*x38*x42) + -((pkCatF + pkCatF)*x38*x43),
((pkOnE + pkOnE) / 2)*x2*x4*x35 + -(((pkOffE + pkOffE) / 2)*x7*x39) + -(((pkCatE + pkCatE) / 2)*x8*x39) + ((pkOnF + pkOnF) / 2)*x36*x40*x41 + ((pkOnF + pkOnF) / 2)*x37*x40*x41 + -(((pkOffF + pkOffF) / 2)*x39*x42) + -(((pkOffF + pkOffF) / 2)*x39*x42) + -(((pkCatF + pkCatF) / 2)*x39*x43) + -(((pkCatF + pkCatF) / 2)*x39*x43),
-(((pkOnF + pkOnF) / 2)*x10*x40*x41) + -pkOnF*x12*x40*x41 + -(((pkOnF + pkOnF) / 2)*x13*x40*x41) + ((pkOffF + pkOffF) / 2)*x14*x42 + ((pkCatF + pkCatF) / 2)*x14*x43 + -(((pkOnF + pkOnF) / 2)*x16*x40*x41) + -(((pkOnF + pkOnF) / 2)*x17*x40*x41) + pkOffF*x18*x42 + pkCatF*x18*x43 + ((pkOffF + pkOffF) / 2)*x19*x42 + ((pkCatF + pkCatF) / 2)*x19*x43 + -((pkOnF + pkOnF)*x20*x40*x41) + -(((pkOnF + pkOnF) / 2)*x21*x40*x41) + ((pkOffF + pkOffF) / 2)*x22*x42 + ((pkCatF + pkCatF) / 2)*x22*x43 + -(((pkOnF + pkOnF) / 2)*x23*x40*x41) + -(((pkOnF + pkOnF) / 2)*x23*x40*x41) + ((pkOffF + pkOffF) / 2)*x24*x42 + ((pkCatF + pkCatF) / 2)*x24*x43 + -pkOnF*x25*x40*x41 + -(((pkOnF + pkOnF) / 2)*x26*x40*x41) + ((pkOffF + pkOffF) / 2)*x26*x42 + ((pkCatF + pkCatF) / 2)*x26*x43 + ((pkOffF + pkOffF) / 2)*x27*x42 + ((pkCatF + pkCatF) / 2)*x27*x43 + -((pkOnF + pkOnF)*x28*x40*x41) + -(((pkOnF + pkOnF) / 2)*x29*x40*x41) + ((pkOffF + pkOffF) / 2)*x29*x42 + ((pkCatF + pkCatF) / 2)*x29*x43 + -(((pkOnF + pkOnF) / 2)*x30*x40*x41) + ((pkOffF + pkOffF) / 2)*x30*x42 + ((pkCatF + pkCatF) / 2)*x30*x43 + -(((pkOnF + pkOnF) / 2)*x31*x40*x41) + -(((pkOnF + pkOnF) / 2)*x31*x40*x41) + pkOffF*x32*x42 + pkCatF*x32*x43 + (pkOffF + pkOffF)*x33*x42 + (pkCatF + pkCatF)*x33*x43 + -(((pkOnF + pkOnF) / 2)*x34*x40*x41) + ((pkOffF + pkOffF) / 2)*x34*x42 + ((pkCatF + pkCatF) / 2)*x34*x43 + ((pkOffF + pkOffF) / 2)*x35*x42 + ((pkOffF + pkOffF) / 2)*x35*x42 + ((pkCatF + pkCatF) / 2)*x35*x43 + ((pkCatF + pkCatF) / 2)*x35*x43 + -(((pkOnF + pkOnF) / 2)*x36*x40*x41) + ((pkOffF + pkOffF) / 2)*x36*x42 + ((pkCatF + pkCatF) / 2)*x36*x43 + -(((pkOnF + pkOnF) / 2)*x37*x40*x41) + ((pkOffF + pkOffF) / 2)*x37*x42 + ((pkCatF + pkCatF) / 2)*x37*x43 + (pkOffF + pkOffF)*x38*x42 + (pkCatF + pkCatF)*x38*x43 + ((pkOffF + pkOffF) / 2)*x39*x42 + ((pkOffF + pkOffF) / 2)*x39*x42 + ((pkCatF + pkCatF) / 2)*x39*x43 + ((pkCatF + pkCatF) / 2)*x39*x43 + -((pkOnF + pkOnF)*x40*x41*x44) + -pkOnF*x40*x41*x44 + -(((pkOnF + pkOnF) / 2)*x40*x41*x45) + -(((pkOnF + pkOnF) / 2)*x40*x41*x45) + -((pkOnF + pkOnF)*x40*x41*x46) + -pkOnF*x40*x41*x47 + -(((pkOnF + pkOnF) / 2)*x40*x41*x48) + ((pkOffF + pkOffF) / 2)*x42*x45 + pkOffF*x42*x46 + (pkOffF + pkOffF)*x42*x47 + ((pkOffF + pkOffF) / 2)*x42*x48 + ((pkOffF + pkOffF) / 2)*x42*x48 + pkOffF*x42*x49 + (pkOffF + pkOffF)*x42*x49 + ((pkCatF + pkCatF) / 2)*x43*x45 + pkCatF*x43*x46 + (pkCatF + pkCatF)*x43*x47 + ((pkCatF + pkCatF) / 2)*x43*x48 + ((pkCatF + pkCatF) / 2)*x43*x48 + pkCatF*x43*x49 + (pkCatF + pkCatF)*x43*x49,
R(0),
R(0),
R(0),
pkCatE*x8*x28 + ((pkCatE + pkCatE) / 2)*x8*x31 + -((pkOnF + pkOnF)*x40*x41*x44) + -pkOnF*x40*x41*x44 + ((pkOffF + pkOffF) / 2)*x42*x45 + pkOffF*x42*x46,
((pkCatE + pkCatE) / 2)*x8*x34 + ((pkCatE + pkCatE) / 2)*x8*x36 + (pkOnF + pkOnF)*x40*x41*x44 + -(((pkOnF + pkOnF) / 2)*x40*x41*x45) + -(((pkOnF + pkOnF) / 2)*x40*x41*x45) + -(((pkOffF + pkOffF) / 2)*x42*x45) + (pkOffF + pkOffF)*x42*x47 + ((pkOffF + pkOffF) / 2)*x42*x48 + -(((pkCatF + pkCatF) / 2)*x43*x45),
((pkCatE + pkCatE) / 2)*x8*x37 + pkOnF*x40*x41*x44 + -((pkOnF + pkOnF)*x40*x41*x46) + -pkOffF*x42*x46 + ((pkOffF + pkOffF) / 2)*x42*x48 + -pkCatF*x43*x46,
pkCatE*x8*x38 + ((pkOnF + pkOnF) / 2)*x40*x41*x45 + -pkOnF*x40*x41*x47 + -((pkOffF + pkOffF)*x42*x47) + pkOffF*x42*x49 + -((pkCatF + pkCatF)*x43*x47),
((pkCatE + pkCatE) / 2)*x8*x39 + ((pkOnF + pkOnF) / 2)*x40*x41*x45 + (pkOnF + pkOnF)*x40*x41*x46 + -(((pkOnF + pkOnF) / 2)*x40*x41*x48) + -(((pkOffF + pkOffF) / 2)*x42*x48) + -(((pkOffF + pkOffF) / 2)*x42*x48) + (pkOffF + pkOffF)*x42*x49 + -(((pkCatF + pkCatF) / 2)*x43*x48) + -(((pkCatF + pkCatF) / 2)*x43*x48),
pkOnF*x40*x41*x47 + ((pkOnF + pkOnF) / 2)*x40*x41*x48 + -pkOffF*x42*x49 + -((pkOffF + pkOffF)*x42*x49) + -pkCatF*x43*x49 + -((pkCatF + pkCatF)*x43*x49),
]

#{S37,S38,S39,S40,S41,S42,S43,S48,S49,S50,S51,S52,S53,S54,S57,S58,S59,S60,S61,S62,S63,S64,S65,S8,S15,S16,S17,S26,S27,S28,S29,S30}
result = aggregate(polys, [x19 + x29 + x32 + x30 + x36 + x44 + x37 + x35 + x45 + x39 + x46 + x47 + x48 + x49 + x12 + x17 + x18 + x25 + x23 + x24])
print("Total for e3_curry_FEB4 SUM is " + str(len(result)))
